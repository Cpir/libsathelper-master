/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: SatHelper.i

#define SWIGMODULE SatHelper

#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if defined(__GNUC__)
#  if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#    ifndef GCC_HASCLASSVISIBILITY
#      define GCC_HASCLASSVISIBILITY
#    endif
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif


#include <stddef.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/types.h>



typedef long long intgo;
typedef unsigned long long uintgo;


# if !defined(__clang__) && (defined(__i386__) || defined(__x86_64__))
#   define SWIGSTRUCTPACKED __attribute__((__packed__, __gcc_struct__))
# else
#   define SWIGSTRUCTPACKED __attribute__((__packed__))
# endif



typedef struct { char *p; intgo n; } _gostring_;
typedef struct { void* array; intgo len; intgo cap; } _goslice_;




#define swiggo_size_assert_eq(x, y, name) typedef char name[(x-y)*(x-y)*-2+1];
#define swiggo_size_assert(t, n) swiggo_size_assert_eq(sizeof(t), n, swiggo_sizeof_##t##_is_not_##n)

swiggo_size_assert(char, 1)
swiggo_size_assert(short, 2)
swiggo_size_assert(int, 4)
typedef long long swiggo_long_long;
swiggo_size_assert(swiggo_long_long, 8)
swiggo_size_assert(float, 4)
swiggo_size_assert(double, 8)

#ifdef __cplusplus
extern "C" {
#endif
extern void crosscall2(void (*fn)(void *, int), void *, int);
extern char* _cgo_topofstack(void) __attribute__ ((weak));
extern void _cgo_allocate(void *, int);
extern void _cgo_panic(void *, int);
#ifdef __cplusplus
}
#endif

static char *_swig_topofstack() {
  if (_cgo_topofstack) {
    return _cgo_topofstack();
  } else {
    return 0;
  }
}

static void _swig_gopanic(const char *p) {
  struct {
    const char *p;
  } SWIGSTRUCTPACKED a;
  a.p = p;
  crosscall2(_cgo_panic, &a, (int) sizeof a);
}




#define SWIG_contract_assert(expr, msg) \
  if (!(expr)) { _swig_gopanic(msg); } else


#define SWIG_exception(code, msg) _swig_gopanic(msg)


static _gostring_ Swig_AllocateString(const char *p, size_t l) {
  _gostring_ ret;
  ret.p = (char*)malloc(l);
  memcpy(ret.p, p, l);
  ret.n = l;
  return ret;
}


static void Swig_free(void* p) {
  free(p);
}

static void* Swig_malloc(int c) {
  return malloc(c);
}


#include "SatHelper/sathelper.h"


#include <stdint.h>		// Use the C99 official header


#include <typeinfo>
#include <stdexcept>


#include <string>


#include <vector>
#include <stdexcept>


#include <map>
#include <algorithm>
#include <stdexcept>


#include <utility>


#include <vector>

SWIGINTERN std::vector< float >::const_reference std_vector_Sl_float_Sg__get(std::vector< float > *self,int i){
                int size = int(self->size());
                if (i>=0 && i<size)
                    return (*self)[i];
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN void std_vector_Sl_float_Sg__set(std::vector< float > *self,int i,std::vector< float >::value_type const &val){
                int size = int(self->size());
                if (i>=0 && i<size)
                    (*self)[i] = val;
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN std::vector< double >::const_reference std_vector_Sl_double_Sg__get(std::vector< double > *self,int i){
                int size = int(self->size());
                if (i>=0 && i<size)
                    return (*self)[i];
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN void std_vector_Sl_double_Sg__set(std::vector< double > *self,int i,std::vector< double >::value_type const &val){
                int size = int(self->size());
                if (i>=0 && i<size)
                    (*self)[i] = val;
                else
                    throw std::out_of_range("vector index out of range");
            }

#include <complex>

SWIGINTERN SatHelper::ConfigParser SatHelper_ConfigParser___getitem__(SatHelper::ConfigParser *self,std::string const &key){
        return (*(self))[key];
    }
#ifdef __cplusplus
extern "C" {
#endif

void _wrap_Swig_free_SatHelper_9d76377ed7889403(void *_swig_go_0) {
  void *arg1 = (void *) 0 ;
  
  arg1 = *(void **)&_swig_go_0; 
  
  Swig_free(arg1);
  
}


void *_wrap_Swig_malloc_SatHelper_9d76377ed7889403(intgo _swig_go_0) {
  int arg1 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  result = (void *)Swig_malloc(arg1);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


std::vector< float > *_wrap_new_VecFloat__SWIG_0_SatHelper_9d76377ed7889403() {
  std::vector< float > *result = 0 ;
  std::vector< float > *_swig_go_result;
  
  
  result = (std::vector< float > *)new std::vector< float >();
  *(std::vector< float > **)&_swig_go_result = (std::vector< float > *)result; 
  return _swig_go_result;
}


std::vector< float > *_wrap_new_VecFloat__SWIG_1_SatHelper_9d76377ed7889403(long long _swig_go_0) {
  std::vector< float >::size_type arg1 ;
  std::vector< float > *result = 0 ;
  std::vector< float > *_swig_go_result;
  
  arg1 = (size_t)_swig_go_0; 
  
  result = (std::vector< float > *)new std::vector< float >(arg1);
  *(std::vector< float > **)&_swig_go_result = (std::vector< float > *)result; 
  return _swig_go_result;
}


long long _wrap_VecFloat_size_SatHelper_9d76377ed7889403(std::vector< float > *_swig_go_0) {
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  std::vector< float >::size_type result;
  long long _swig_go_result;
  
  arg1 = *(std::vector< float > **)&_swig_go_0; 
  
  result = ((std::vector< float > const *)arg1)->size();
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_VecFloat_capacity_SatHelper_9d76377ed7889403(std::vector< float > *_swig_go_0) {
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  std::vector< float >::size_type result;
  long long _swig_go_result;
  
  arg1 = *(std::vector< float > **)&_swig_go_0; 
  
  result = ((std::vector< float > const *)arg1)->capacity();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_VecFloat_reserve_SatHelper_9d76377ed7889403(std::vector< float > *_swig_go_0, long long _swig_go_1) {
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  std::vector< float >::size_type arg2 ;
  
  arg1 = *(std::vector< float > **)&_swig_go_0; 
  arg2 = (size_t)_swig_go_1; 
  
  (arg1)->reserve(arg2);
  
}


bool _wrap_VecFloat_isEmpty_SatHelper_9d76377ed7889403(std::vector< float > *_swig_go_0) {
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(std::vector< float > **)&_swig_go_0; 
  
  result = (bool)((std::vector< float > const *)arg1)->empty();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_VecFloat_clear_SatHelper_9d76377ed7889403(std::vector< float > *_swig_go_0) {
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  
  arg1 = *(std::vector< float > **)&_swig_go_0; 
  
  (arg1)->clear();
  
}


void _wrap_VecFloat_add_SatHelper_9d76377ed7889403(std::vector< float > *_swig_go_0, float _swig_go_1) {
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  std::vector< float >::value_type *arg2 = 0 ;
  
  arg1 = *(std::vector< float > **)&_swig_go_0; 
  arg2 = (std::vector< float >::value_type *)&_swig_go_1; 
  
  (arg1)->push_back((std::vector< float >::value_type const &)*arg2);
  
}


float _wrap_VecFloat_get_SatHelper_9d76377ed7889403(std::vector< float > *_swig_go_0, intgo _swig_go_1) {
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  int arg2 ;
  std::vector< float >::value_type *result = 0 ;
  float _swig_go_result;
  
  arg1 = *(std::vector< float > **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  try {
    result = (std::vector< float >::value_type *) &std_vector_Sl_float_Sg__get(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    _swig_gopanic((&_e)->what());
  }
  
  _swig_go_result = (float)*result; 
  return _swig_go_result;
}


void _wrap_VecFloat_set_SatHelper_9d76377ed7889403(std::vector< float > *_swig_go_0, intgo _swig_go_1, float _swig_go_2) {
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  int arg2 ;
  std::vector< float >::value_type *arg3 = 0 ;
  
  arg1 = *(std::vector< float > **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (std::vector< float >::value_type *)&_swig_go_2; 
  
  try {
    std_vector_Sl_float_Sg__set(arg1,arg2,(float const &)*arg3);
  }
  catch(std::out_of_range &_e) {
    _swig_gopanic((&_e)->what());
  }
  
  
}


void _wrap_delete_VecFloat_SatHelper_9d76377ed7889403(std::vector< float > *_swig_go_0) {
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  
  arg1 = *(std::vector< float > **)&_swig_go_0; 
  
  delete arg1;
  
}


std::vector< double > *_wrap_new_VecDouble__SWIG_0_SatHelper_9d76377ed7889403() {
  std::vector< double > *result = 0 ;
  std::vector< double > *_swig_go_result;
  
  
  result = (std::vector< double > *)new std::vector< double >();
  *(std::vector< double > **)&_swig_go_result = (std::vector< double > *)result; 
  return _swig_go_result;
}


std::vector< double > *_wrap_new_VecDouble__SWIG_1_SatHelper_9d76377ed7889403(long long _swig_go_0) {
  std::vector< double >::size_type arg1 ;
  std::vector< double > *result = 0 ;
  std::vector< double > *_swig_go_result;
  
  arg1 = (size_t)_swig_go_0; 
  
  result = (std::vector< double > *)new std::vector< double >(arg1);
  *(std::vector< double > **)&_swig_go_result = (std::vector< double > *)result; 
  return _swig_go_result;
}


long long _wrap_VecDouble_size_SatHelper_9d76377ed7889403(std::vector< double > *_swig_go_0) {
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  std::vector< double >::size_type result;
  long long _swig_go_result;
  
  arg1 = *(std::vector< double > **)&_swig_go_0; 
  
  result = ((std::vector< double > const *)arg1)->size();
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_VecDouble_capacity_SatHelper_9d76377ed7889403(std::vector< double > *_swig_go_0) {
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  std::vector< double >::size_type result;
  long long _swig_go_result;
  
  arg1 = *(std::vector< double > **)&_swig_go_0; 
  
  result = ((std::vector< double > const *)arg1)->capacity();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_VecDouble_reserve_SatHelper_9d76377ed7889403(std::vector< double > *_swig_go_0, long long _swig_go_1) {
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  std::vector< double >::size_type arg2 ;
  
  arg1 = *(std::vector< double > **)&_swig_go_0; 
  arg2 = (size_t)_swig_go_1; 
  
  (arg1)->reserve(arg2);
  
}


bool _wrap_VecDouble_isEmpty_SatHelper_9d76377ed7889403(std::vector< double > *_swig_go_0) {
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(std::vector< double > **)&_swig_go_0; 
  
  result = (bool)((std::vector< double > const *)arg1)->empty();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_VecDouble_clear_SatHelper_9d76377ed7889403(std::vector< double > *_swig_go_0) {
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  
  arg1 = *(std::vector< double > **)&_swig_go_0; 
  
  (arg1)->clear();
  
}


void _wrap_VecDouble_add_SatHelper_9d76377ed7889403(std::vector< double > *_swig_go_0, double _swig_go_1) {
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  std::vector< double >::value_type *arg2 = 0 ;
  
  arg1 = *(std::vector< double > **)&_swig_go_0; 
  arg2 = (std::vector< double >::value_type *)&_swig_go_1; 
  
  (arg1)->push_back((std::vector< double >::value_type const &)*arg2);
  
}


double _wrap_VecDouble_get_SatHelper_9d76377ed7889403(std::vector< double > *_swig_go_0, intgo _swig_go_1) {
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  int arg2 ;
  std::vector< double >::value_type *result = 0 ;
  double _swig_go_result;
  
  arg1 = *(std::vector< double > **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  try {
    result = (std::vector< double >::value_type *) &std_vector_Sl_double_Sg__get(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    _swig_gopanic((&_e)->what());
  }
  
  _swig_go_result = (double)*result; 
  return _swig_go_result;
}


void _wrap_VecDouble_set_SatHelper_9d76377ed7889403(std::vector< double > *_swig_go_0, intgo _swig_go_1, double _swig_go_2) {
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  int arg2 ;
  std::vector< double >::value_type *arg3 = 0 ;
  
  arg1 = *(std::vector< double > **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (std::vector< double >::value_type *)&_swig_go_2; 
  
  try {
    std_vector_Sl_double_Sg__set(arg1,arg2,(double const &)*arg3);
  }
  catch(std::out_of_range &_e) {
    _swig_gopanic((&_e)->what());
  }
  
  
}


void _wrap_delete_VecDouble_SatHelper_9d76377ed7889403(std::vector< double > *_swig_go_0) {
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  
  arg1 = *(std::vector< double > **)&_swig_go_0; 
  
  delete arg1;
  
}


SatHelper::ConfigParser *_wrap_new_ConfigParser_SatHelper_9d76377ed7889403(_gostring_ _swig_go_0) {
  std::string *arg1 = 0 ;
  SatHelper::ConfigParser *result = 0 ;
  SatHelper::ConfigParser *_swig_go_result;
  
  
  std::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;
  
  
  result = (SatHelper::ConfigParser *)new SatHelper::ConfigParser((std::string const &)*arg1);
  *(SatHelper::ConfigParser **)&_swig_go_result = (SatHelper::ConfigParser *)result; 
  return _swig_go_result;
}


void _wrap_ConfigParser_set_SatHelper_9d76377ed7889403(SatHelper::ConfigParser *_swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2) {
  SatHelper::ConfigParser *arg1 = (SatHelper::ConfigParser *) 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  arg1 = *(SatHelper::ConfigParser **)&_swig_go_0; 
  
  std::string arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;
  
  
  std::string arg3_str(_swig_go_2.p, _swig_go_2.n);
  arg3 = &arg3_str;
  
  
  (arg1)->set((std::string const &)*arg2,(std::string const &)*arg3);
  
}


bool _wrap_ConfigParser_hasKey_SatHelper_9d76377ed7889403(SatHelper::ConfigParser *_swig_go_0, _gostring_ _swig_go_1) {
  SatHelper::ConfigParser *arg1 = (SatHelper::ConfigParser *) 0 ;
  std::string *arg2 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(SatHelper::ConfigParser **)&_swig_go_0; 
  
  std::string arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;
  
  
  result = (bool)(arg1)->hasKey((std::string const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_ConfigParser_get_SatHelper_9d76377ed7889403(SatHelper::ConfigParser *_swig_go_0, _gostring_ _swig_go_1) {
  SatHelper::ConfigParser *arg1 = (SatHelper::ConfigParser *) 0 ;
  std::string *arg2 = 0 ;
  std::string result;
  _gostring_ _swig_go_result;
  
  arg1 = *(SatHelper::ConfigParser **)&_swig_go_0; 
  
  std::string arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;
  
  
  result = (arg1)->get((std::string const &)*arg2);
  _swig_go_result = Swig_AllocateString((&result)->data(), (&result)->length()); 
  return _swig_go_result;
}


float _wrap_ConfigParser_getFloat_SatHelper_9d76377ed7889403(SatHelper::ConfigParser *_swig_go_0, _gostring_ _swig_go_1) {
  SatHelper::ConfigParser *arg1 = (SatHelper::ConfigParser *) 0 ;
  std::string *arg2 = 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(SatHelper::ConfigParser **)&_swig_go_0; 
  
  std::string arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;
  
  
  result = (float)(arg1)->getFloat((std::string const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_ConfigParser_getInt_SatHelper_9d76377ed7889403(SatHelper::ConfigParser *_swig_go_0, _gostring_ _swig_go_1) {
  SatHelper::ConfigParser *arg1 = (SatHelper::ConfigParser *) 0 ;
  std::string *arg2 = 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(SatHelper::ConfigParser **)&_swig_go_0; 
  
  std::string arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;
  
  
  result = (int)(arg1)->getInt((std::string const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_ConfigParser_getUInt_SatHelper_9d76377ed7889403(SatHelper::ConfigParser *_swig_go_0, _gostring_ _swig_go_1) {
  SatHelper::ConfigParser *arg1 = (SatHelper::ConfigParser *) 0 ;
  std::string *arg2 = 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(SatHelper::ConfigParser **)&_swig_go_0; 
  
  std::string arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;
  
  
  result = (unsigned int)(arg1)->getUInt((std::string const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ConfigParser_getBool_SatHelper_9d76377ed7889403(SatHelper::ConfigParser *_swig_go_0, _gostring_ _swig_go_1) {
  SatHelper::ConfigParser *arg1 = (SatHelper::ConfigParser *) 0 ;
  std::string *arg2 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(SatHelper::ConfigParser **)&_swig_go_0; 
  
  std::string arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;
  
  
  result = (bool)(arg1)->getBool((std::string const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ConfigParser_SaveFile_SatHelper_9d76377ed7889403(SatHelper::ConfigParser *_swig_go_0) {
  SatHelper::ConfigParser *arg1 = (SatHelper::ConfigParser *) 0 ;
  
  arg1 = *(SatHelper::ConfigParser **)&_swig_go_0; 
  
  (arg1)->SaveFile();
  
}


bool _wrap_ConfigParser_LoadFile_SatHelper_9d76377ed7889403(SatHelper::ConfigParser *_swig_go_0) {
  SatHelper::ConfigParser *arg1 = (SatHelper::ConfigParser *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(SatHelper::ConfigParser **)&_swig_go_0; 
  
  result = (bool)(arg1)->LoadFile();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_ConfigParser_SatHelper_9d76377ed7889403(SatHelper::ConfigParser *_swig_go_0) {
  SatHelper::ConfigParser *arg1 = (SatHelper::ConfigParser *) 0 ;
  
  arg1 = *(SatHelper::ConfigParser **)&_swig_go_0; 
  
  delete arg1;
  
}


SatHelper::ConfigParser *_wrap_ConfigParser___getitem___SatHelper_9d76377ed7889403(SatHelper::ConfigParser *_swig_go_0, _gostring_ _swig_go_1) {
  SatHelper::ConfigParser *arg1 = (SatHelper::ConfigParser *) 0 ;
  std::string *arg2 = 0 ;
  SwigValueWrapper< SatHelper::ConfigParser > result;
  SatHelper::ConfigParser *_swig_go_result;
  
  arg1 = *(SatHelper::ConfigParser **)&_swig_go_0; 
  
  std::string arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;
  
  
  result = SatHelper_ConfigParser___getitem__(arg1,(std::string const &)*arg2);
  *(SatHelper::ConfigParser **)&_swig_go_result = new SatHelper::ConfigParser(result); 
  return _swig_go_result;
}


bool _wrap_Correlator_hardCorrelate_SatHelper_9d76377ed7889403(char _swig_go_0, char _swig_go_1) {
  uint8_t arg1 ;
  uint8_t arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = (uint8_t)_swig_go_0; 
  arg2 = (uint8_t)_swig_go_1; 
  
  result = (bool)SatHelper::Correlator::hardCorrelate(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_Correlator_softCorrelate_SatHelper_9d76377ed7889403(char _swig_go_0, char _swig_go_1) {
  uint8_t arg1 ;
  uint8_t arg2 ;
  uint32_t result;
  intgo _swig_go_result;
  
  arg1 = (uint8_t)_swig_go_0; 
  arg2 = (uint8_t)_swig_go_1; 
  
  result = (uint32_t)SatHelper::Correlator::softCorrelate(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


SatHelper::Correlator *_wrap_new_Correlator_SatHelper_9d76377ed7889403() {
  SatHelper::Correlator *result = 0 ;
  SatHelper::Correlator *_swig_go_result;
  
  
  result = (SatHelper::Correlator *)new SatHelper::Correlator();
  *(SatHelper::Correlator **)&_swig_go_result = (SatHelper::Correlator *)result; 
  return _swig_go_result;
}


void _wrap_delete_Correlator_SatHelper_9d76377ed7889403(SatHelper::Correlator *_swig_go_0) {
  SatHelper::Correlator *arg1 = (SatHelper::Correlator *) 0 ;
  
  arg1 = *(SatHelper::Correlator **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_Correlator_getHighestCorrelation_SatHelper_9d76377ed7889403(SatHelper::Correlator *_swig_go_0) {
  SatHelper::Correlator *arg1 = (SatHelper::Correlator *) 0 ;
  uint32_t result;
  intgo _swig_go_result;
  
  arg1 = *(SatHelper::Correlator **)&_swig_go_0; 
  
  result = (uint32_t)(arg1)->getHighestCorrelation();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_Correlator_getHighestCorrelationPosition_SatHelper_9d76377ed7889403(SatHelper::Correlator *_swig_go_0) {
  SatHelper::Correlator *arg1 = (SatHelper::Correlator *) 0 ;
  uint32_t result;
  intgo _swig_go_result;
  
  arg1 = *(SatHelper::Correlator **)&_swig_go_0; 
  
  result = (uint32_t)(arg1)->getHighestCorrelationPosition();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_Correlator_getCorrelationWordNumber_SatHelper_9d76377ed7889403(SatHelper::Correlator *_swig_go_0) {
  SatHelper::Correlator *arg1 = (SatHelper::Correlator *) 0 ;
  uint32_t result;
  intgo _swig_go_result;
  
  arg1 = *(SatHelper::Correlator **)&_swig_go_0; 
  
  result = (uint32_t)(arg1)->getCorrelationWordNumber();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_Correlator_addWord__SWIG_0_SatHelper_9d76377ed7889403(SatHelper::Correlator *_swig_go_0, intgo _swig_go_1) {
  SatHelper::Correlator *arg1 = (SatHelper::Correlator *) 0 ;
  uint32_t arg2 ;
  
  arg1 = *(SatHelper::Correlator **)&_swig_go_0; 
  arg2 = (uint32_t)_swig_go_1; 
  
  (arg1)->addWord(arg2);
  
}


void _wrap_Correlator_addWord__SWIG_1_SatHelper_9d76377ed7889403(SatHelper::Correlator *_swig_go_0, long long _swig_go_1) {
  SatHelper::Correlator *arg1 = (SatHelper::Correlator *) 0 ;
  uint64_t arg2 ;
  
  arg1 = *(SatHelper::Correlator **)&_swig_go_0; 
  arg2 = (uint64_t)_swig_go_1; 
  
  (arg1)->addWord(arg2);
  
}


void _wrap_Correlator_correlate_SatHelper_9d76377ed7889403(SatHelper::Correlator *_swig_go_0, char *_swig_go_1, intgo _swig_go_2) {
  SatHelper::Correlator *arg1 = (SatHelper::Correlator *) 0 ;
  uint8_t *arg2 = (uint8_t *) 0 ;
  uint32_t arg3 ;
  
  arg1 = *(SatHelper::Correlator **)&_swig_go_0; 
  arg2 = *(uint8_t **)&_swig_go_1; 
  arg3 = (uint32_t)_swig_go_2; 
  
  (arg1)->correlate(arg2,arg3);
  
}


SatHelper::Viterbi27 *_wrap_new_Viterbi27__SWIG_0_SatHelper_9d76377ed7889403(intgo _swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  int arg1 ;
  int arg2 ;
  int arg3 ;
  SatHelper::Viterbi27 *result = 0 ;
  SatHelper::Viterbi27 *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (SatHelper::Viterbi27 *)new SatHelper::Viterbi27(arg1,arg2,arg3);
  *(SatHelper::Viterbi27 **)&_swig_go_result = (SatHelper::Viterbi27 *)result; 
  return _swig_go_result;
}


SatHelper::Viterbi27 *_wrap_new_Viterbi27__SWIG_1_SatHelper_9d76377ed7889403(intgo _swig_go_0) {
  int arg1 ;
  SatHelper::Viterbi27 *result = 0 ;
  SatHelper::Viterbi27 *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  result = (SatHelper::Viterbi27 *)new SatHelper::Viterbi27(arg1);
  *(SatHelper::Viterbi27 **)&_swig_go_result = (SatHelper::Viterbi27 *)result; 
  return _swig_go_result;
}


intgo _wrap_Viterbi27_DecodedSize_SatHelper_9d76377ed7889403(SatHelper::Viterbi27 *_swig_go_0) {
  SatHelper::Viterbi27 *arg1 = (SatHelper::Viterbi27 *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(SatHelper::Viterbi27 **)&_swig_go_0; 
  
  result = (int)(arg1)->DecodedSize();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_Viterbi27_EncodedSize_SatHelper_9d76377ed7889403(SatHelper::Viterbi27 *_swig_go_0) {
  SatHelper::Viterbi27 *arg1 = (SatHelper::Viterbi27 *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(SatHelper::Viterbi27 **)&_swig_go_0; 
  
  result = (int)(arg1)->EncodedSize();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_Viterbi27_SetCalculateErrors_SatHelper_9d76377ed7889403(SatHelper::Viterbi27 *_swig_go_0, bool _swig_go_1) {
  SatHelper::Viterbi27 *arg1 = (SatHelper::Viterbi27 *) 0 ;
  bool arg2 ;
  
  arg1 = *(SatHelper::Viterbi27 **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  (arg1)->SetCalculateErrors(arg2);
  
}


intgo _wrap_Viterbi27_GetBER_SatHelper_9d76377ed7889403(SatHelper::Viterbi27 *_swig_go_0) {
  SatHelper::Viterbi27 *arg1 = (SatHelper::Viterbi27 *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(SatHelper::Viterbi27 **)&_swig_go_0; 
  
  result = (int)(arg1)->GetBER();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_Viterbi27_GetPercentBER_SatHelper_9d76377ed7889403(SatHelper::Viterbi27 *_swig_go_0) {
  SatHelper::Viterbi27 *arg1 = (SatHelper::Viterbi27 *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(SatHelper::Viterbi27 **)&_swig_go_0; 
  
  result = (float)(arg1)->GetPercentBER();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_Viterbi27_IsSSEMode_SatHelper_9d76377ed7889403(SatHelper::Viterbi27 *_swig_go_0) {
  SatHelper::Viterbi27 *arg1 = (SatHelper::Viterbi27 *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(SatHelper::Viterbi27 **)&_swig_go_0; 
  
  result = (bool)(arg1)->IsSSEMode();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_Viterbi27_decode_SatHelper_9d76377ed7889403(SatHelper::Viterbi27 *_swig_go_0, char *_swig_go_1, char *_swig_go_2) {
  SatHelper::Viterbi27 *arg1 = (SatHelper::Viterbi27 *) 0 ;
  uint8_t *arg2 = (uint8_t *) 0 ;
  uint8_t *arg3 = (uint8_t *) 0 ;
  
  arg1 = *(SatHelper::Viterbi27 **)&_swig_go_0; 
  arg2 = *(uint8_t **)&_swig_go_1; 
  arg3 = *(uint8_t **)&_swig_go_2; 
  
  (arg1)->decode(arg2,arg3);
  
}


void _wrap_Viterbi27_encode_SatHelper_9d76377ed7889403(SatHelper::Viterbi27 *_swig_go_0, char *_swig_go_1, char *_swig_go_2) {
  SatHelper::Viterbi27 *arg1 = (SatHelper::Viterbi27 *) 0 ;
  uint8_t *arg2 = (uint8_t *) 0 ;
  uint8_t *arg3 = (uint8_t *) 0 ;
  
  arg1 = *(SatHelper::Viterbi27 **)&_swig_go_0; 
  arg2 = *(uint8_t **)&_swig_go_1; 
  arg3 = *(uint8_t **)&_swig_go_2; 
  
  (arg1)->encode(arg2,arg3);
  
}


void _wrap_delete_Viterbi27_SatHelper_9d76377ed7889403(SatHelper::Viterbi27 *_swig_go_0) {
  SatHelper::Viterbi27 *arg1 = (SatHelper::Viterbi27 *) 0 ;
  
  arg1 = *(SatHelper::Viterbi27 **)&_swig_go_0; 
  
  delete arg1;
  
}


SatHelper::ReedSolomon *_wrap_new_ReedSolomon_SatHelper_9d76377ed7889403() {
  SatHelper::ReedSolomon *result = 0 ;
  SatHelper::ReedSolomon *_swig_go_result;
  
  
  result = (SatHelper::ReedSolomon *)new SatHelper::ReedSolomon();
  *(SatHelper::ReedSolomon **)&_swig_go_result = (SatHelper::ReedSolomon *)result; 
  return _swig_go_result;
}


intgo _wrap_ReedSolomon_decode_ccsds_SatHelper_9d76377ed7889403(SatHelper::ReedSolomon *_swig_go_0, char *_swig_go_1) {
  SatHelper::ReedSolomon *arg1 = (SatHelper::ReedSolomon *) 0 ;
  uint8_t *arg2 = (uint8_t *) 0 ;
  uint32_t result;
  intgo _swig_go_result;
  
  arg1 = *(SatHelper::ReedSolomon **)&_swig_go_0; 
  arg2 = *(uint8_t **)&_swig_go_1; 
  
  result = (uint32_t)(arg1)->decode_ccsds(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_ReedSolomon_decode_rs8_SatHelper_9d76377ed7889403(SatHelper::ReedSolomon *_swig_go_0, char *_swig_go_1) {
  SatHelper::ReedSolomon *arg1 = (SatHelper::ReedSolomon *) 0 ;
  uint8_t *arg2 = (uint8_t *) 0 ;
  uint32_t result;
  intgo _swig_go_result;
  
  arg1 = *(SatHelper::ReedSolomon **)&_swig_go_0; 
  arg2 = *(uint8_t **)&_swig_go_1; 
  
  result = (uint32_t)(arg1)->decode_rs8(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ReedSolomon_deinterleave_SatHelper_9d76377ed7889403(SatHelper::ReedSolomon *_swig_go_0, char *_swig_go_1, char *_swig_go_2, char _swig_go_3, char _swig_go_4) {
  SatHelper::ReedSolomon *arg1 = (SatHelper::ReedSolomon *) 0 ;
  uint8_t *arg2 = (uint8_t *) 0 ;
  uint8_t *arg3 = (uint8_t *) 0 ;
  uint8_t arg4 ;
  uint8_t arg5 ;
  
  arg1 = *(SatHelper::ReedSolomon **)&_swig_go_0; 
  arg2 = *(uint8_t **)&_swig_go_1; 
  arg3 = *(uint8_t **)&_swig_go_2; 
  arg4 = (uint8_t)_swig_go_3; 
  arg5 = (uint8_t)_swig_go_4; 
  
  (arg1)->deinterleave(arg2,arg3,arg4,arg5);
  
}


void _wrap_ReedSolomon_interleave_SatHelper_9d76377ed7889403(SatHelper::ReedSolomon *_swig_go_0, char *_swig_go_1, char *_swig_go_2, char _swig_go_3, char _swig_go_4) {
  SatHelper::ReedSolomon *arg1 = (SatHelper::ReedSolomon *) 0 ;
  uint8_t *arg2 = (uint8_t *) 0 ;
  uint8_t *arg3 = (uint8_t *) 0 ;
  uint8_t arg4 ;
  uint8_t arg5 ;
  
  arg1 = *(SatHelper::ReedSolomon **)&_swig_go_0; 
  arg2 = *(uint8_t **)&_swig_go_1; 
  arg3 = *(uint8_t **)&_swig_go_2; 
  arg4 = (uint8_t)_swig_go_3; 
  arg5 = (uint8_t)_swig_go_4; 
  
  (arg1)->interleave(arg2,arg3,arg4,arg5);
  
}


void _wrap_ReedSolomon_SetCopyParityToOutput_SatHelper_9d76377ed7889403(SatHelper::ReedSolomon *_swig_go_0, bool _swig_go_1) {
  SatHelper::ReedSolomon *arg1 = (SatHelper::ReedSolomon *) 0 ;
  bool arg2 ;
  
  arg1 = *(SatHelper::ReedSolomon **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  (arg1)->SetCopyParityToOutput(arg2);
  
}


void _wrap_delete_ReedSolomon_SatHelper_9d76377ed7889403(SatHelper::ReedSolomon *_swig_go_0) {
  SatHelper::ReedSolomon *arg1 = (SatHelper::ReedSolomon *) 0 ;
  
  arg1 = *(SatHelper::ReedSolomon **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_DEG_0_SatHelper_9d76377ed7889403() {
  SatHelper::PhaseShift result;
  intgo _swig_go_result;
  
  
  result = SatHelper::DEG_0;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_DEG_90_SatHelper_9d76377ed7889403() {
  SatHelper::PhaseShift result;
  intgo _swig_go_result;
  
  
  result = SatHelper::DEG_90;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_DEG_180_SatHelper_9d76377ed7889403() {
  SatHelper::PhaseShift result;
  intgo _swig_go_result;
  
  
  result = SatHelper::DEG_180;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_DEG_270_SatHelper_9d76377ed7889403() {
  SatHelper::PhaseShift result;
  intgo _swig_go_result;
  
  
  result = SatHelper::DEG_270;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


SatHelper::PacketFixer *_wrap_new_PacketFixer_SatHelper_9d76377ed7889403() {
  SatHelper::PacketFixer *result = 0 ;
  SatHelper::PacketFixer *_swig_go_result;
  
  
  result = (SatHelper::PacketFixer *)new SatHelper::PacketFixer();
  *(SatHelper::PacketFixer **)&_swig_go_result = (SatHelper::PacketFixer *)result; 
  return _swig_go_result;
}


void _wrap_PacketFixer_fixPacket_SatHelper_9d76377ed7889403(SatHelper::PacketFixer *_swig_go_0, char *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SatHelper::PacketFixer *arg1 = (SatHelper::PacketFixer *) 0 ;
  uint8_t *arg2 = (uint8_t *) 0 ;
  uint32_t arg3 ;
  SatHelper::PhaseShift arg4 ;
  bool arg5 ;
  
  arg1 = *(SatHelper::PacketFixer **)&_swig_go_0; 
  arg2 = *(uint8_t **)&_swig_go_1; 
  arg3 = (uint32_t)_swig_go_2; 
  arg4 = (SatHelper::PhaseShift)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->fixPacket(arg2,arg3,arg4,arg5);
  
}


void _wrap_delete_PacketFixer_SatHelper_9d76377ed7889403(SatHelper::PacketFixer *_swig_go_0) {
  SatHelper::PacketFixer *arg1 = (SatHelper::PacketFixer *) 0 ;
  
  arg1 = *(SatHelper::PacketFixer **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_ScreenManager_GotoXY_SatHelper_9d76377ed7889403(intgo _swig_go_0, intgo _swig_go_1) {
  int arg1 ;
  int arg2 ;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  SatHelper::ScreenManager::GotoXY(arg1,arg2);
  
}


void _wrap_ScreenManager_Clear_SatHelper_9d76377ed7889403() {
  SatHelper::ScreenManager::Clear();
  
}


SatHelper::ScreenManager *_wrap_new_ScreenManager_SatHelper_9d76377ed7889403() {
  SatHelper::ScreenManager *result = 0 ;
  SatHelper::ScreenManager *_swig_go_result;
  
  
  result = (SatHelper::ScreenManager *)new SatHelper::ScreenManager();
  *(SatHelper::ScreenManager **)&_swig_go_result = (SatHelper::ScreenManager *)result; 
  return _swig_go_result;
}


void _wrap_delete_ScreenManager_SatHelper_9d76377ed7889403(SatHelper::ScreenManager *_swig_go_0) {
  SatHelper::ScreenManager *arg1 = (SatHelper::ScreenManager *) 0 ;
  
  arg1 = *(SatHelper::ScreenManager **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_IP_ANY_SatHelper_9d76377ed7889403() {
  SatHelper::PresetIpAddress result;
  intgo _swig_go_result;
  
  
  result = SatHelper::IP_ANY;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_IP_LOCALHOST_SatHelper_9d76377ed7889403() {
  SatHelper::PresetIpAddress result;
  intgo _swig_go_result;
  
  
  result = SatHelper::IP_LOCALHOST;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


SatHelper::IPAddress *_wrap_IPAddress_localhost_get_SatHelper_9d76377ed7889403() {
  SatHelper::IPAddress *result = 0 ;
  SatHelper::IPAddress *_swig_go_result;
  
  
  result = (SatHelper::IPAddress *)&SatHelper::IPAddress::localhost;
  *(SatHelper::IPAddress **)&_swig_go_result = (SatHelper::IPAddress *)result; 
  return _swig_go_result;
}


SatHelper::IPAddress *_wrap_IPAddress_anyAddress_get_SatHelper_9d76377ed7889403() {
  SatHelper::IPAddress *result = 0 ;
  SatHelper::IPAddress *_swig_go_result;
  
  
  result = (SatHelper::IPAddress *)&SatHelper::IPAddress::anyAddress;
  *(SatHelper::IPAddress **)&_swig_go_result = (SatHelper::IPAddress *)result; 
  return _swig_go_result;
}


SatHelper::IPAddress *_wrap_new_IPAddress__SWIG_0_SatHelper_9d76377ed7889403() {
  SatHelper::IPAddress *result = 0 ;
  SatHelper::IPAddress *_swig_go_result;
  
  
  result = (SatHelper::IPAddress *)new SatHelper::IPAddress();
  *(SatHelper::IPAddress **)&_swig_go_result = (SatHelper::IPAddress *)result; 
  return _swig_go_result;
}


SatHelper::IPAddress *_wrap_new_IPAddress__SWIG_1_SatHelper_9d76377ed7889403(intgo _swig_go_0) {
  SatHelper::PresetIpAddress arg1 ;
  SatHelper::IPAddress *result = 0 ;
  SatHelper::IPAddress *_swig_go_result;
  
  arg1 = (SatHelper::PresetIpAddress)_swig_go_0; 
  
  result = (SatHelper::IPAddress *)new SatHelper::IPAddress(arg1);
  *(SatHelper::IPAddress **)&_swig_go_result = (SatHelper::IPAddress *)result; 
  return _swig_go_result;
}


SatHelper::IPAddress *_wrap_new_IPAddress__SWIG_2_SatHelper_9d76377ed7889403(intgo _swig_go_0) {
  uint32_t arg1 ;
  SatHelper::IPAddress *result = 0 ;
  SatHelper::IPAddress *_swig_go_result;
  
  arg1 = (uint32_t)_swig_go_0; 
  
  result = (SatHelper::IPAddress *)new SatHelper::IPAddress(arg1);
  *(SatHelper::IPAddress **)&_swig_go_result = (SatHelper::IPAddress *)result; 
  return _swig_go_result;
}


SatHelper::IPAddress *_wrap_new_IPAddress__SWIG_3_SatHelper_9d76377ed7889403(in_addr *_swig_go_0) {
  in_addr arg1 ;
  in_addr *argp1 ;
  SatHelper::IPAddress *result = 0 ;
  SatHelper::IPAddress *_swig_go_result;
  
  
  argp1 = (in_addr *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null in_addr");
  }
  arg1 = (in_addr)*argp1;
  
  
  result = (SatHelper::IPAddress *)new SatHelper::IPAddress(arg1);
  *(SatHelper::IPAddress **)&_swig_go_result = (SatHelper::IPAddress *)result; 
  return _swig_go_result;
}


SatHelper::IPAddress *_wrap_new_IPAddress__SWIG_4_SatHelper_9d76377ed7889403(char _swig_go_0, char _swig_go_1, char _swig_go_2, char _swig_go_3) {
  char arg1 ;
  char arg2 ;
  char arg3 ;
  char arg4 ;
  SatHelper::IPAddress *result = 0 ;
  SatHelper::IPAddress *_swig_go_result;
  
  arg1 = (char)_swig_go_0; 
  arg2 = (char)_swig_go_1; 
  arg3 = (char)_swig_go_2; 
  arg4 = (char)_swig_go_3; 
  
  result = (SatHelper::IPAddress *)new SatHelper::IPAddress(arg1,arg2,arg3,arg4);
  *(SatHelper::IPAddress **)&_swig_go_result = (SatHelper::IPAddress *)result; 
  return _swig_go_result;
}


SatHelper::IPAddress *_wrap_new_IPAddress__SWIG_5_SatHelper_9d76377ed7889403(_gostring_ _swig_go_0) {
  std::string arg1 ;
  SatHelper::IPAddress *result = 0 ;
  SatHelper::IPAddress *_swig_go_result;
  
  (&arg1)->assign(_swig_go_0.p, _swig_go_0.n); 
  
  result = (SatHelper::IPAddress *)new SatHelper::IPAddress(arg1);
  *(SatHelper::IPAddress **)&_swig_go_result = (SatHelper::IPAddress *)result; 
  return _swig_go_result;
}


SatHelper::IPAddress *_wrap_new_IPAddress__SWIG_6_SatHelper_9d76377ed7889403(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  SatHelper::IPAddress *result = 0 ;
  SatHelper::IPAddress *_swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  result = (SatHelper::IPAddress *)new SatHelper::IPAddress((char const *)arg1);
  *(SatHelper::IPAddress **)&_swig_go_result = (SatHelper::IPAddress *)result; 
  free(arg1); 
  return _swig_go_result;
}


_gostring_ _wrap_IPAddress_ToString_SatHelper_9d76377ed7889403(SatHelper::IPAddress *_swig_go_0) {
  SatHelper::IPAddress *arg1 = (SatHelper::IPAddress *) 0 ;
  std::string result;
  _gostring_ _swig_go_result;
  
  arg1 = *(SatHelper::IPAddress **)&_swig_go_0; 
  
  result = ((SatHelper::IPAddress const *)arg1)->ToString();
  _swig_go_result = Swig_AllocateString((&result)->data(), (&result)->length()); 
  return _swig_go_result;
}


intgo _wrap_IPAddress_ToUint32_SatHelper_9d76377ed7889403(SatHelper::IPAddress *_swig_go_0) {
  SatHelper::IPAddress *arg1 = (SatHelper::IPAddress *) 0 ;
  uint32_t result;
  intgo _swig_go_result;
  
  arg1 = *(SatHelper::IPAddress **)&_swig_go_0; 
  
  result = (uint32_t)((SatHelper::IPAddress const *)arg1)->ToUint32();
  _swig_go_result = result; 
  return _swig_go_result;
}


in_addr *_wrap_IPAddress_ToInAddr_SatHelper_9d76377ed7889403(SatHelper::IPAddress *_swig_go_0) {
  SatHelper::IPAddress *arg1 = (SatHelper::IPAddress *) 0 ;
  in_addr result;
  in_addr *_swig_go_result;
  
  arg1 = *(SatHelper::IPAddress **)&_swig_go_0; 
  
  result = ((SatHelper::IPAddress const *)arg1)->ToInAddr();
  *(in_addr **)&_swig_go_result = new in_addr(result); 
  return _swig_go_result;
}


bool _wrap_IPAddress_equals_SatHelper_9d76377ed7889403(SatHelper::IPAddress *_swig_go_0, SatHelper::IPAddress *_swig_go_1) {
  SatHelper::IPAddress *arg1 = (SatHelper::IPAddress *) 0 ;
  SatHelper::IPAddress *arg2 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(SatHelper::IPAddress **)&_swig_go_0; 
  arg2 = *(SatHelper::IPAddress **)&_swig_go_1; 
  
  result = (bool)((SatHelper::IPAddress const *)arg1)->operator ==((SatHelper::IPAddress const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_IPAddress_different_SatHelper_9d76377ed7889403(SatHelper::IPAddress *_swig_go_0, SatHelper::IPAddress *_swig_go_1) {
  SatHelper::IPAddress *arg1 = (SatHelper::IPAddress *) 0 ;
  SatHelper::IPAddress *arg2 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(SatHelper::IPAddress **)&_swig_go_0; 
  arg2 = *(SatHelper::IPAddress **)&_swig_go_1; 
  
  result = (bool)((SatHelper::IPAddress const *)arg1)->operator !=((SatHelper::IPAddress const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_IPAddress_SatHelper_9d76377ed7889403(SatHelper::IPAddress *_swig_go_0) {
  SatHelper::IPAddress *arg1 = (SatHelper::IPAddress *) 0 ;
  
  arg1 = *(SatHelper::IPAddress **)&_swig_go_0; 
  
  delete arg1;
  
}


SatHelper::Socket *_wrap_new_Socket__SWIG_0_SatHelper_9d76377ed7889403() {
  SatHelper::Socket *result = 0 ;
  SatHelper::Socket *_swig_go_result;
  
  
  result = (SatHelper::Socket *)new SatHelper::Socket();
  *(SatHelper::Socket **)&_swig_go_result = (SatHelper::Socket *)result; 
  return _swig_go_result;
}


SatHelper::Socket *_wrap_new_Socket__SWIG_1_SatHelper_9d76377ed7889403(SatHelper::IPAddress *_swig_go_0) {
  SatHelper::IPAddress arg1 ;
  SatHelper::IPAddress *argp1 ;
  SatHelper::Socket *result = 0 ;
  SatHelper::Socket *_swig_go_result;
  
  
  argp1 = (SatHelper::IPAddress *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null SatHelper::IPAddress");
  }
  arg1 = (SatHelper::IPAddress)*argp1;
  
  
  result = (SatHelper::Socket *)new SatHelper::Socket(arg1);
  *(SatHelper::Socket **)&_swig_go_result = (SatHelper::Socket *)result; 
  return _swig_go_result;
}


SatHelper::Socket *_wrap_new_Socket__SWIG_2_SatHelper_9d76377ed7889403(_gostring_ _swig_go_0) {
  std::string arg1 ;
  SatHelper::Socket *result = 0 ;
  SatHelper::Socket *_swig_go_result;
  
  (&arg1)->assign(_swig_go_0.p, _swig_go_0.n); 
  
  result = (SatHelper::Socket *)new SatHelper::Socket(arg1);
  *(SatHelper::Socket **)&_swig_go_result = (SatHelper::Socket *)result; 
  return _swig_go_result;
}


SatHelper::Socket *_wrap_new_Socket__SWIG_3_SatHelper_9d76377ed7889403(SatHelper::IPAddress *_swig_go_0, intgo _swig_go_1) {
  SatHelper::IPAddress arg1 ;
  int arg2 ;
  SatHelper::IPAddress *argp1 ;
  SatHelper::Socket *result = 0 ;
  SatHelper::Socket *_swig_go_result;
  
  
  argp1 = (SatHelper::IPAddress *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null SatHelper::IPAddress");
  }
  arg1 = (SatHelper::IPAddress)*argp1;
  
  arg2 = (int)_swig_go_1; 
  
  result = (SatHelper::Socket *)new SatHelper::Socket(arg1,arg2);
  *(SatHelper::Socket **)&_swig_go_result = (SatHelper::Socket *)result; 
  return _swig_go_result;
}


SatHelper::Socket *_wrap_new_Socket__SWIG_4_SatHelper_9d76377ed7889403(SatHelper::Socket *_swig_go_0) {
  SatHelper::Socket *arg1 = 0 ;
  SatHelper::Socket *result = 0 ;
  SatHelper::Socket *_swig_go_result;
  
  arg1 = *(SatHelper::Socket **)&_swig_go_0; 
  
  result = (SatHelper::Socket *)new SatHelper::Socket((SatHelper::Socket const &)*arg1);
  *(SatHelper::Socket **)&_swig_go_result = (SatHelper::Socket *)result; 
  return _swig_go_result;
}


void _wrap_delete_Socket_SatHelper_9d76377ed7889403(SatHelper::Socket *_swig_go_0) {
  SatHelper::Socket *arg1 = (SatHelper::Socket *) 0 ;
  
  arg1 = *(SatHelper::Socket **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_Socket_Receive_SatHelper_9d76377ed7889403(SatHelper::Socket *_swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2) {
  SatHelper::Socket *arg1 = (SatHelper::Socket *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  
  arg1 = *(SatHelper::Socket **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (int)_swig_go_2; 
  
  (arg1)->Receive(arg2,arg3);
  
  free(arg2); 
}


void _wrap_Socket_Send_SatHelper_9d76377ed7889403(SatHelper::Socket *_swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2) {
  SatHelper::Socket *arg1 = (SatHelper::Socket *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  
  arg1 = *(SatHelper::Socket **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (int)_swig_go_2; 
  
  (arg1)->Send(arg2,arg3);
  
  free(arg2); 
}


void _wrap_Socket_SendTo_SatHelper_9d76377ed7889403(SatHelper::Socket *_swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2, SatHelper::IPAddress *_swig_go_3, intgo _swig_go_4) {
  SatHelper::Socket *arg1 = (SatHelper::Socket *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  SatHelper::IPAddress arg4 ;
  int arg5 ;
  SatHelper::IPAddress *argp4 ;
  
  arg1 = *(SatHelper::Socket **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (int)_swig_go_2; 
  
  argp4 = (SatHelper::IPAddress *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null SatHelper::IPAddress");
  }
  arg4 = (SatHelper::IPAddress)*argp4;
  
  arg5 = (int)_swig_go_4; 
  
  (arg1)->SendTo(arg2,arg3,arg4,arg5);
  
  free(arg2); 
}


intgo _wrap_Socket_ReceiveFrom_SatHelper_9d76377ed7889403(SatHelper::Socket *_swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2, SatHelper::IPAddress *_swig_go_3, intgo _swig_go_4) {
  SatHelper::Socket *arg1 = (SatHelper::Socket *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  SatHelper::IPAddress arg4 ;
  int arg5 ;
  SatHelper::IPAddress *argp4 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(SatHelper::Socket **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (int)_swig_go_2; 
  
  argp4 = (SatHelper::IPAddress *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null SatHelper::IPAddress");
  }
  arg4 = (SatHelper::IPAddress)*argp4;
  
  arg5 = (int)_swig_go_4; 
  
  result = (int)(arg1)->ReceiveFrom(arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


long long _wrap_Socket_AvailableData_SatHelper_9d76377ed7889403(SatHelper::Socket *_swig_go_0) {
  SatHelper::Socket *arg1 = (SatHelper::Socket *) 0 ;
  uint64_t result;
  long long _swig_go_result;
  
  arg1 = *(SatHelper::Socket **)&_swig_go_0; 
  
  result = (uint64_t)(arg1)->AvailableData();
  _swig_go_result = result; 
  return _swig_go_result;
}


SatHelper::IPAddress *_wrap_Socket_GetAddress_SatHelper_9d76377ed7889403(SatHelper::Socket *_swig_go_0) {
  SatHelper::Socket *arg1 = (SatHelper::Socket *) 0 ;
  SatHelper::IPAddress result;
  SatHelper::IPAddress *_swig_go_result;
  
  arg1 = *(SatHelper::Socket **)&_swig_go_0; 
  
  result = ((SatHelper::Socket const *)arg1)->GetAddress();
  *(SatHelper::IPAddress **)&_swig_go_result = new SatHelper::IPAddress(result); 
  return _swig_go_result;
}


void _wrap_Socket_WaitForData_SatHelper_9d76377ed7889403(SatHelper::Socket *_swig_go_0, long long _swig_go_1, intgo _swig_go_2) {
  SatHelper::Socket *arg1 = (SatHelper::Socket *) 0 ;
  uint64_t arg2 ;
  uint32_t arg3 ;
  
  arg1 = *(SatHelper::Socket **)&_swig_go_0; 
  arg2 = (uint64_t)_swig_go_1; 
  arg3 = (uint32_t)_swig_go_2; 
  
  (arg1)->WaitForData(arg2,arg3);
  
}


void _wrap_Socket_Close_SatHelper_9d76377ed7889403(SatHelper::Socket *_swig_go_0) {
  SatHelper::Socket *arg1 = (SatHelper::Socket *) 0 ;
  
  arg1 = *(SatHelper::Socket **)&_swig_go_0; 
  
  (arg1)->Close();
  
}


SatHelper::TcpSocket *_wrap_new_TcpSocket__SWIG_0_SatHelper_9d76377ed7889403() {
  SatHelper::TcpSocket *result = 0 ;
  SatHelper::TcpSocket *_swig_go_result;
  
  
  result = (SatHelper::TcpSocket *)new SatHelper::TcpSocket();
  *(SatHelper::TcpSocket **)&_swig_go_result = (SatHelper::TcpSocket *)result; 
  return _swig_go_result;
}


SatHelper::TcpSocket *_wrap_new_TcpSocket__SWIG_1_SatHelper_9d76377ed7889403(SatHelper::IPAddress *_swig_go_0) {
  SatHelper::IPAddress arg1 ;
  SatHelper::IPAddress *argp1 ;
  SatHelper::TcpSocket *result = 0 ;
  SatHelper::TcpSocket *_swig_go_result;
  
  
  argp1 = (SatHelper::IPAddress *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null SatHelper::IPAddress");
  }
  arg1 = (SatHelper::IPAddress)*argp1;
  
  
  result = (SatHelper::TcpSocket *)new SatHelper::TcpSocket(arg1);
  *(SatHelper::TcpSocket **)&_swig_go_result = (SatHelper::TcpSocket *)result; 
  return _swig_go_result;
}


SatHelper::TcpSocket *_wrap_new_TcpSocket__SWIG_2_SatHelper_9d76377ed7889403(_gostring_ _swig_go_0) {
  std::string arg1 ;
  SatHelper::TcpSocket *result = 0 ;
  SatHelper::TcpSocket *_swig_go_result;
  
  (&arg1)->assign(_swig_go_0.p, _swig_go_0.n); 
  
  result = (SatHelper::TcpSocket *)new SatHelper::TcpSocket(arg1);
  *(SatHelper::TcpSocket **)&_swig_go_result = (SatHelper::TcpSocket *)result; 
  return _swig_go_result;
}


SatHelper::TcpSocket *_wrap_new_TcpSocket__SWIG_3_SatHelper_9d76377ed7889403(SatHelper::IPAddress *_swig_go_0, intgo _swig_go_1) {
  SatHelper::IPAddress arg1 ;
  int arg2 ;
  SatHelper::IPAddress *argp1 ;
  SatHelper::TcpSocket *result = 0 ;
  SatHelper::TcpSocket *_swig_go_result;
  
  
  argp1 = (SatHelper::IPAddress *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null SatHelper::IPAddress");
  }
  arg1 = (SatHelper::IPAddress)*argp1;
  
  arg2 = (int)_swig_go_1; 
  
  result = (SatHelper::TcpSocket *)new SatHelper::TcpSocket(arg1,arg2);
  *(SatHelper::TcpSocket **)&_swig_go_result = (SatHelper::TcpSocket *)result; 
  return _swig_go_result;
}


SatHelper::TcpSocket *_wrap_new_TcpSocket__SWIG_4_SatHelper_9d76377ed7889403(SatHelper::TcpSocket *_swig_go_0) {
  SatHelper::TcpSocket *arg1 = 0 ;
  SatHelper::TcpSocket *result = 0 ;
  SatHelper::TcpSocket *_swig_go_result;
  
  arg1 = *(SatHelper::TcpSocket **)&_swig_go_0; 
  
  result = (SatHelper::TcpSocket *)new SatHelper::TcpSocket((SatHelper::TcpSocket const &)*arg1);
  *(SatHelper::TcpSocket **)&_swig_go_result = (SatHelper::TcpSocket *)result; 
  return _swig_go_result;
}


intgo _wrap_TcpSocket_GetSocketFD_SatHelper_9d76377ed7889403(SatHelper::TcpSocket *_swig_go_0) {
  SatHelper::TcpSocket *arg1 = (SatHelper::TcpSocket *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(SatHelper::TcpSocket **)&_swig_go_0; 
  
  result = (int)(arg1)->GetSocketFD();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_TcpSocket_SatHelper_9d76377ed7889403(SatHelper::TcpSocket *_swig_go_0) {
  SatHelper::TcpSocket *arg1 = (SatHelper::TcpSocket *) 0 ;
  
  arg1 = *(SatHelper::TcpSocket **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_TcpSocket_Receive_SatHelper_9d76377ed7889403(SatHelper::TcpSocket *_swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2) {
  SatHelper::TcpSocket *arg1 = (SatHelper::TcpSocket *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  
  arg1 = *(SatHelper::TcpSocket **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (int)_swig_go_2; 
  
  SatHelper::Socket *swig_b0 = (SatHelper::Socket *)arg1;
  (swig_b0)->Receive(arg2,arg3);
  
  free(arg2); 
}


void _wrap_TcpSocket_Send_SatHelper_9d76377ed7889403(SatHelper::TcpSocket *_swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2) {
  SatHelper::TcpSocket *arg1 = (SatHelper::TcpSocket *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  
  arg1 = *(SatHelper::TcpSocket **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (int)_swig_go_2; 
  
  SatHelper::Socket *swig_b0 = (SatHelper::Socket *)arg1;
  (swig_b0)->Send(arg2,arg3);
  
  free(arg2); 
}


void _wrap_TcpSocket_SendTo_SatHelper_9d76377ed7889403(SatHelper::TcpSocket *_swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2, SatHelper::IPAddress *_swig_go_3, intgo _swig_go_4) {
  SatHelper::TcpSocket *arg1 = (SatHelper::TcpSocket *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  SatHelper::IPAddress arg4 ;
  int arg5 ;
  SatHelper::IPAddress *argp4 ;
  
  arg1 = *(SatHelper::TcpSocket **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (int)_swig_go_2; 
  
  argp4 = (SatHelper::IPAddress *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null SatHelper::IPAddress");
  }
  arg4 = (SatHelper::IPAddress)*argp4;
  
  arg5 = (int)_swig_go_4; 
  
  SatHelper::Socket *swig_b0 = (SatHelper::Socket *)arg1;
  (swig_b0)->SendTo(arg2,arg3,arg4,arg5);
  
  free(arg2); 
}


intgo _wrap_TcpSocket_ReceiveFrom_SatHelper_9d76377ed7889403(SatHelper::TcpSocket *_swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2, SatHelper::IPAddress *_swig_go_3, intgo _swig_go_4) {
  SatHelper::TcpSocket *arg1 = (SatHelper::TcpSocket *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  SatHelper::IPAddress arg4 ;
  int arg5 ;
  SatHelper::IPAddress *argp4 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(SatHelper::TcpSocket **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (int)_swig_go_2; 
  
  argp4 = (SatHelper::IPAddress *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null SatHelper::IPAddress");
  }
  arg4 = (SatHelper::IPAddress)*argp4;
  
  arg5 = (int)_swig_go_4; 
  
  SatHelper::Socket *swig_b0 = (SatHelper::Socket *)arg1;
  result = (int)(swig_b0)->ReceiveFrom(arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


long long _wrap_TcpSocket_AvailableData_SatHelper_9d76377ed7889403(SatHelper::TcpSocket *_swig_go_0) {
  SatHelper::TcpSocket *arg1 = (SatHelper::TcpSocket *) 0 ;
  uint64_t result;
  long long _swig_go_result;
  
  arg1 = *(SatHelper::TcpSocket **)&_swig_go_0; 
  
  SatHelper::Socket *swig_b0 = (SatHelper::Socket *)arg1;
  result = (uint64_t)(swig_b0)->AvailableData();
  _swig_go_result = result; 
  return _swig_go_result;
}


SatHelper::IPAddress *_wrap_TcpSocket_GetAddress_SatHelper_9d76377ed7889403(SatHelper::TcpSocket *_swig_go_0) {
  SatHelper::TcpSocket *arg1 = (SatHelper::TcpSocket *) 0 ;
  SatHelper::IPAddress result;
  SatHelper::IPAddress *_swig_go_result;
  
  arg1 = *(SatHelper::TcpSocket **)&_swig_go_0; 
  
  SatHelper::Socket *swig_b0 = (SatHelper::Socket *)arg1;
  result = ((SatHelper::Socket const *)swig_b0)->GetAddress();
  *(SatHelper::IPAddress **)&_swig_go_result = new SatHelper::IPAddress(result); 
  return _swig_go_result;
}


void _wrap_TcpSocket_WaitForData_SatHelper_9d76377ed7889403(SatHelper::TcpSocket *_swig_go_0, long long _swig_go_1, intgo _swig_go_2) {
  SatHelper::TcpSocket *arg1 = (SatHelper::TcpSocket *) 0 ;
  uint64_t arg2 ;
  uint32_t arg3 ;
  
  arg1 = *(SatHelper::TcpSocket **)&_swig_go_0; 
  arg2 = (uint64_t)_swig_go_1; 
  arg3 = (uint32_t)_swig_go_2; 
  
  SatHelper::Socket *swig_b0 = (SatHelper::Socket *)arg1;
  (swig_b0)->WaitForData(arg2,arg3);
  
}


void _wrap_TcpSocket_Close_SatHelper_9d76377ed7889403(SatHelper::TcpSocket *_swig_go_0) {
  SatHelper::TcpSocket *arg1 = (SatHelper::TcpSocket *) 0 ;
  
  arg1 = *(SatHelper::TcpSocket **)&_swig_go_0; 
  
  SatHelper::Socket *swig_b0 = (SatHelper::Socket *)arg1;
  (swig_b0)->Close();
  
}


SatHelper::TcpServer *_wrap_new_TcpServer__SWIG_0_SatHelper_9d76377ed7889403() {
  SatHelper::TcpServer *result = 0 ;
  SatHelper::TcpServer *_swig_go_result;
  
  
  result = (SatHelper::TcpServer *)new SatHelper::TcpServer();
  *(SatHelper::TcpServer **)&_swig_go_result = (SatHelper::TcpServer *)result; 
  return _swig_go_result;
}


SatHelper::TcpServer *_wrap_new_TcpServer__SWIG_1_SatHelper_9d76377ed7889403(SatHelper::IPAddress *_swig_go_0) {
  SatHelper::IPAddress arg1 ;
  SatHelper::IPAddress *argp1 ;
  SatHelper::TcpServer *result = 0 ;
  SatHelper::TcpServer *_swig_go_result;
  
  
  argp1 = (SatHelper::IPAddress *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null SatHelper::IPAddress");
  }
  arg1 = (SatHelper::IPAddress)*argp1;
  
  
  result = (SatHelper::TcpServer *)new SatHelper::TcpServer(arg1);
  *(SatHelper::TcpServer **)&_swig_go_result = (SatHelper::TcpServer *)result; 
  return _swig_go_result;
}


SatHelper::TcpServer *_wrap_new_TcpServer__SWIG_2_SatHelper_9d76377ed7889403(_gostring_ _swig_go_0) {
  std::string arg1 ;
  SatHelper::TcpServer *result = 0 ;
  SatHelper::TcpServer *_swig_go_result;
  
  (&arg1)->assign(_swig_go_0.p, _swig_go_0.n); 
  
  result = (SatHelper::TcpServer *)new SatHelper::TcpServer(arg1);
  *(SatHelper::TcpServer **)&_swig_go_result = (SatHelper::TcpServer *)result; 
  return _swig_go_result;
}


SatHelper::TcpServer *_wrap_new_TcpServer__SWIG_3_SatHelper_9d76377ed7889403(intgo _swig_go_0) {
  int arg1 ;
  SatHelper::TcpServer *result = 0 ;
  SatHelper::TcpServer *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  result = (SatHelper::TcpServer *)new SatHelper::TcpServer(arg1);
  *(SatHelper::TcpServer **)&_swig_go_result = (SatHelper::TcpServer *)result; 
  return _swig_go_result;
}


SatHelper::TcpServer *_wrap_new_TcpServer__SWIG_4_SatHelper_9d76377ed7889403(SatHelper::IPAddress *_swig_go_0, intgo _swig_go_1) {
  SatHelper::IPAddress arg1 ;
  int arg2 ;
  SatHelper::IPAddress *argp1 ;
  SatHelper::TcpServer *result = 0 ;
  SatHelper::TcpServer *_swig_go_result;
  
  
  argp1 = (SatHelper::IPAddress *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null SatHelper::IPAddress");
  }
  arg1 = (SatHelper::IPAddress)*argp1;
  
  arg2 = (int)_swig_go_1; 
  
  result = (SatHelper::TcpServer *)new SatHelper::TcpServer(arg1,arg2);
  *(SatHelper::TcpServer **)&_swig_go_result = (SatHelper::TcpServer *)result; 
  return _swig_go_result;
}


SatHelper::TcpServer *_wrap_new_TcpServer__SWIG_5_SatHelper_9d76377ed7889403(_gostring_ _swig_go_0, intgo _swig_go_1) {
  std::string arg1 ;
  int arg2 ;
  SatHelper::TcpServer *result = 0 ;
  SatHelper::TcpServer *_swig_go_result;
  
  (&arg1)->assign(_swig_go_0.p, _swig_go_0.n); 
  arg2 = (int)_swig_go_1; 
  
  result = (SatHelper::TcpServer *)new SatHelper::TcpServer(arg1,arg2);
  *(SatHelper::TcpServer **)&_swig_go_result = (SatHelper::TcpServer *)result; 
  return _swig_go_result;
}


void _wrap_TcpServer_Listen__SWIG_0_SatHelper_9d76377ed7889403(SatHelper::TcpServer *_swig_go_0, intgo _swig_go_1) {
  SatHelper::TcpServer *arg1 = (SatHelper::TcpServer *) 0 ;
  int arg2 ;
  
  arg1 = *(SatHelper::TcpServer **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  (arg1)->Listen(arg2);
  
}


void _wrap_TcpServer_Listen__SWIG_1_SatHelper_9d76377ed7889403(SatHelper::TcpServer *_swig_go_0, intgo _swig_go_1, bool _swig_go_2) {
  SatHelper::TcpServer *arg1 = (SatHelper::TcpServer *) 0 ;
  int arg2 ;
  bool arg3 ;
  
  arg1 = *(SatHelper::TcpServer **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  
  (arg1)->Listen(arg2,arg3);
  
}


SatHelper::TcpSocket *_wrap_TcpServer_Accept_SatHelper_9d76377ed7889403(SatHelper::TcpServer *_swig_go_0) {
  SatHelper::TcpServer *arg1 = (SatHelper::TcpServer *) 0 ;
  SatHelper::TcpSocket result;
  SatHelper::TcpSocket *_swig_go_result;
  
  arg1 = *(SatHelper::TcpServer **)&_swig_go_0; 
  
  result = (arg1)->Accept();
  *(SatHelper::TcpSocket **)&_swig_go_result = new SatHelper::TcpSocket(result); 
  return _swig_go_result;
}


intgo _wrap_TcpServer_GetPort_SatHelper_9d76377ed7889403(SatHelper::TcpServer *_swig_go_0) {
  SatHelper::TcpServer *arg1 = (SatHelper::TcpServer *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(SatHelper::TcpServer **)&_swig_go_0; 
  
  result = (int)(arg1)->GetPort();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_TcpServer_GetMaxConnections_SatHelper_9d76377ed7889403(SatHelper::TcpServer *_swig_go_0) {
  SatHelper::TcpServer *arg1 = (SatHelper::TcpServer *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(SatHelper::TcpServer **)&_swig_go_0; 
  
  result = (int)(arg1)->GetMaxConnections();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_TcpServer_Listen__SWIG_2_SatHelper_9d76377ed7889403(SatHelper::TcpServer *_swig_go_0, _gostring_ _swig_go_1) {
  SatHelper::TcpServer *arg1 = (SatHelper::TcpServer *) 0 ;
  std::string arg2 ;
  
  arg1 = *(SatHelper::TcpServer **)&_swig_go_0; 
  (&arg2)->assign(_swig_go_1.p, _swig_go_1.n); 
  
  (arg1)->Listen(arg2);
  
}


void _wrap_delete_TcpServer_SatHelper_9d76377ed7889403(SatHelper::TcpServer *_swig_go_0) {
  SatHelper::TcpServer *arg1 = (SatHelper::TcpServer *) 0 ;
  
  arg1 = *(SatHelper::TcpServer **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_TcpServer_GetSocketFD_SatHelper_9d76377ed7889403(SatHelper::TcpServer *_swig_go_0) {
  SatHelper::TcpServer *arg1 = (SatHelper::TcpServer *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(SatHelper::TcpServer **)&_swig_go_0; 
  
  SatHelper::TcpSocket *swig_b0 = (SatHelper::TcpSocket *)arg1;
  result = (int)(swig_b0)->GetSocketFD();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_TcpServer_Receive_SatHelper_9d76377ed7889403(SatHelper::TcpServer *_swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2) {
  SatHelper::TcpServer *arg1 = (SatHelper::TcpServer *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  
  arg1 = *(SatHelper::TcpServer **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (int)_swig_go_2; 
  
  SatHelper::TcpSocket *swig_b0 = (SatHelper::TcpSocket *)arg1;
  SatHelper::Socket *swig_b1 = (SatHelper::Socket *)swig_b0;
  (swig_b1)->Receive(arg2,arg3);
  
  free(arg2); 
}


void _wrap_TcpServer_Send_SatHelper_9d76377ed7889403(SatHelper::TcpServer *_swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2) {
  SatHelper::TcpServer *arg1 = (SatHelper::TcpServer *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  
  arg1 = *(SatHelper::TcpServer **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (int)_swig_go_2; 
  
  SatHelper::TcpSocket *swig_b0 = (SatHelper::TcpSocket *)arg1;
  SatHelper::Socket *swig_b1 = (SatHelper::Socket *)swig_b0;
  (swig_b1)->Send(arg2,arg3);
  
  free(arg2); 
}


void _wrap_TcpServer_SendTo_SatHelper_9d76377ed7889403(SatHelper::TcpServer *_swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2, SatHelper::IPAddress *_swig_go_3, intgo _swig_go_4) {
  SatHelper::TcpServer *arg1 = (SatHelper::TcpServer *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  SatHelper::IPAddress arg4 ;
  int arg5 ;
  SatHelper::IPAddress *argp4 ;
  
  arg1 = *(SatHelper::TcpServer **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (int)_swig_go_2; 
  
  argp4 = (SatHelper::IPAddress *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null SatHelper::IPAddress");
  }
  arg4 = (SatHelper::IPAddress)*argp4;
  
  arg5 = (int)_swig_go_4; 
  
  SatHelper::TcpSocket *swig_b0 = (SatHelper::TcpSocket *)arg1;
  SatHelper::Socket *swig_b1 = (SatHelper::Socket *)swig_b0;
  (swig_b1)->SendTo(arg2,arg3,arg4,arg5);
  
  free(arg2); 
}


intgo _wrap_TcpServer_ReceiveFrom_SatHelper_9d76377ed7889403(SatHelper::TcpServer *_swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2, SatHelper::IPAddress *_swig_go_3, intgo _swig_go_4) {
  SatHelper::TcpServer *arg1 = (SatHelper::TcpServer *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  SatHelper::IPAddress arg4 ;
  int arg5 ;
  SatHelper::IPAddress *argp4 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(SatHelper::TcpServer **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (int)_swig_go_2; 
  
  argp4 = (SatHelper::IPAddress *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null SatHelper::IPAddress");
  }
  arg4 = (SatHelper::IPAddress)*argp4;
  
  arg5 = (int)_swig_go_4; 
  
  SatHelper::TcpSocket *swig_b0 = (SatHelper::TcpSocket *)arg1;
  SatHelper::Socket *swig_b1 = (SatHelper::Socket *)swig_b0;
  result = (int)(swig_b1)->ReceiveFrom(arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


long long _wrap_TcpServer_AvailableData_SatHelper_9d76377ed7889403(SatHelper::TcpServer *_swig_go_0) {
  SatHelper::TcpServer *arg1 = (SatHelper::TcpServer *) 0 ;
  uint64_t result;
  long long _swig_go_result;
  
  arg1 = *(SatHelper::TcpServer **)&_swig_go_0; 
  
  SatHelper::TcpSocket *swig_b0 = (SatHelper::TcpSocket *)arg1;
  SatHelper::Socket *swig_b1 = (SatHelper::Socket *)swig_b0;
  result = (uint64_t)(swig_b1)->AvailableData();
  _swig_go_result = result; 
  return _swig_go_result;
}


SatHelper::IPAddress *_wrap_TcpServer_GetAddress_SatHelper_9d76377ed7889403(SatHelper::TcpServer *_swig_go_0) {
  SatHelper::TcpServer *arg1 = (SatHelper::TcpServer *) 0 ;
  SatHelper::IPAddress result;
  SatHelper::IPAddress *_swig_go_result;
  
  arg1 = *(SatHelper::TcpServer **)&_swig_go_0; 
  
  SatHelper::TcpSocket *swig_b0 = (SatHelper::TcpSocket *)arg1;
  SatHelper::Socket *swig_b1 = (SatHelper::Socket *)swig_b0;
  result = ((SatHelper::Socket const *)swig_b1)->GetAddress();
  *(SatHelper::IPAddress **)&_swig_go_result = new SatHelper::IPAddress(result); 
  return _swig_go_result;
}


void _wrap_TcpServer_WaitForData_SatHelper_9d76377ed7889403(SatHelper::TcpServer *_swig_go_0, long long _swig_go_1, intgo _swig_go_2) {
  SatHelper::TcpServer *arg1 = (SatHelper::TcpServer *) 0 ;
  uint64_t arg2 ;
  uint32_t arg3 ;
  
  arg1 = *(SatHelper::TcpServer **)&_swig_go_0; 
  arg2 = (uint64_t)_swig_go_1; 
  arg3 = (uint32_t)_swig_go_2; 
  
  SatHelper::TcpSocket *swig_b0 = (SatHelper::TcpSocket *)arg1;
  SatHelper::Socket *swig_b1 = (SatHelper::Socket *)swig_b0;
  (swig_b1)->WaitForData(arg2,arg3);
  
}


void _wrap_TcpServer_Close_SatHelper_9d76377ed7889403(SatHelper::TcpServer *_swig_go_0) {
  SatHelper::TcpServer *arg1 = (SatHelper::TcpServer *) 0 ;
  
  arg1 = *(SatHelper::TcpServer **)&_swig_go_0; 
  
  SatHelper::TcpSocket *swig_b0 = (SatHelper::TcpSocket *)arg1;
  SatHelper::Socket *swig_b1 = (SatHelper::Socket *)swig_b0;
  (swig_b1)->Close();
  
}


SatHelper::TcpClient *_wrap_new_TcpClient__SWIG_0_SatHelper_9d76377ed7889403(SatHelper::IPAddress *_swig_go_0, intgo _swig_go_1) {
  SatHelper::IPAddress arg1 ;
  int arg2 ;
  SatHelper::IPAddress *argp1 ;
  SatHelper::TcpClient *result = 0 ;
  SatHelper::TcpClient *_swig_go_result;
  
  
  argp1 = (SatHelper::IPAddress *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null SatHelper::IPAddress");
  }
  arg1 = (SatHelper::IPAddress)*argp1;
  
  arg2 = (int)_swig_go_1; 
  
  result = (SatHelper::TcpClient *)new SatHelper::TcpClient(arg1,arg2);
  *(SatHelper::TcpClient **)&_swig_go_result = (SatHelper::TcpClient *)result; 
  return _swig_go_result;
}


SatHelper::TcpClient *_wrap_new_TcpClient__SWIG_1_SatHelper_9d76377ed7889403(_gostring_ _swig_go_0, intgo _swig_go_1) {
  std::string arg1 ;
  int arg2 ;
  SatHelper::TcpClient *result = 0 ;
  SatHelper::TcpClient *_swig_go_result;
  
  (&arg1)->assign(_swig_go_0.p, _swig_go_0.n); 
  arg2 = (int)_swig_go_1; 
  
  result = (SatHelper::TcpClient *)new SatHelper::TcpClient(arg1,arg2);
  *(SatHelper::TcpClient **)&_swig_go_result = (SatHelper::TcpClient *)result; 
  return _swig_go_result;
}


void _wrap_TcpClient_Connect_SatHelper_9d76377ed7889403(SatHelper::TcpClient *_swig_go_0) {
  SatHelper::TcpClient *arg1 = (SatHelper::TcpClient *) 0 ;
  
  arg1 = *(SatHelper::TcpClient **)&_swig_go_0; 
  
  (arg1)->Connect();
  
}


void _wrap_TcpClient_Close_SatHelper_9d76377ed7889403(SatHelper::TcpClient *_swig_go_0) {
  SatHelper::TcpClient *arg1 = (SatHelper::TcpClient *) 0 ;
  
  arg1 = *(SatHelper::TcpClient **)&_swig_go_0; 
  
  (arg1)->Close();
  
}


intgo _wrap_TcpClient_GetPort_SatHelper_9d76377ed7889403(SatHelper::TcpClient *_swig_go_0) {
  SatHelper::TcpClient *arg1 = (SatHelper::TcpClient *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(SatHelper::TcpClient **)&_swig_go_0; 
  
  result = (int)(arg1)->GetPort();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_TcpClient_SatHelper_9d76377ed7889403(SatHelper::TcpClient *_swig_go_0) {
  SatHelper::TcpClient *arg1 = (SatHelper::TcpClient *) 0 ;
  
  arg1 = *(SatHelper::TcpClient **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_TcpClient_GetSocketFD_SatHelper_9d76377ed7889403(SatHelper::TcpClient *_swig_go_0) {
  SatHelper::TcpClient *arg1 = (SatHelper::TcpClient *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(SatHelper::TcpClient **)&_swig_go_0; 
  
  SatHelper::TcpSocket *swig_b0 = (SatHelper::TcpSocket *)arg1;
  result = (int)(swig_b0)->GetSocketFD();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_TcpClient_Receive_SatHelper_9d76377ed7889403(SatHelper::TcpClient *_swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2) {
  SatHelper::TcpClient *arg1 = (SatHelper::TcpClient *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  
  arg1 = *(SatHelper::TcpClient **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (int)_swig_go_2; 
  
  SatHelper::TcpSocket *swig_b0 = (SatHelper::TcpSocket *)arg1;
  SatHelper::Socket *swig_b1 = (SatHelper::Socket *)swig_b0;
  (swig_b1)->Receive(arg2,arg3);
  
  free(arg2); 
}


void _wrap_TcpClient_Send_SatHelper_9d76377ed7889403(SatHelper::TcpClient *_swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2) {
  SatHelper::TcpClient *arg1 = (SatHelper::TcpClient *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  
  arg1 = *(SatHelper::TcpClient **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (int)_swig_go_2; 
  
  SatHelper::TcpSocket *swig_b0 = (SatHelper::TcpSocket *)arg1;
  SatHelper::Socket *swig_b1 = (SatHelper::Socket *)swig_b0;
  (swig_b1)->Send(arg2,arg3);
  
  free(arg2); 
}


void _wrap_TcpClient_SendTo_SatHelper_9d76377ed7889403(SatHelper::TcpClient *_swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2, SatHelper::IPAddress *_swig_go_3, intgo _swig_go_4) {
  SatHelper::TcpClient *arg1 = (SatHelper::TcpClient *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  SatHelper::IPAddress arg4 ;
  int arg5 ;
  SatHelper::IPAddress *argp4 ;
  
  arg1 = *(SatHelper::TcpClient **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (int)_swig_go_2; 
  
  argp4 = (SatHelper::IPAddress *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null SatHelper::IPAddress");
  }
  arg4 = (SatHelper::IPAddress)*argp4;
  
  arg5 = (int)_swig_go_4; 
  
  SatHelper::TcpSocket *swig_b0 = (SatHelper::TcpSocket *)arg1;
  SatHelper::Socket *swig_b1 = (SatHelper::Socket *)swig_b0;
  (swig_b1)->SendTo(arg2,arg3,arg4,arg5);
  
  free(arg2); 
}


intgo _wrap_TcpClient_ReceiveFrom_SatHelper_9d76377ed7889403(SatHelper::TcpClient *_swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2, SatHelper::IPAddress *_swig_go_3, intgo _swig_go_4) {
  SatHelper::TcpClient *arg1 = (SatHelper::TcpClient *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  SatHelper::IPAddress arg4 ;
  int arg5 ;
  SatHelper::IPAddress *argp4 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(SatHelper::TcpClient **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (int)_swig_go_2; 
  
  argp4 = (SatHelper::IPAddress *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null SatHelper::IPAddress");
  }
  arg4 = (SatHelper::IPAddress)*argp4;
  
  arg5 = (int)_swig_go_4; 
  
  SatHelper::TcpSocket *swig_b0 = (SatHelper::TcpSocket *)arg1;
  SatHelper::Socket *swig_b1 = (SatHelper::Socket *)swig_b0;
  result = (int)(swig_b1)->ReceiveFrom(arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


long long _wrap_TcpClient_AvailableData_SatHelper_9d76377ed7889403(SatHelper::TcpClient *_swig_go_0) {
  SatHelper::TcpClient *arg1 = (SatHelper::TcpClient *) 0 ;
  uint64_t result;
  long long _swig_go_result;
  
  arg1 = *(SatHelper::TcpClient **)&_swig_go_0; 
  
  SatHelper::TcpSocket *swig_b0 = (SatHelper::TcpSocket *)arg1;
  SatHelper::Socket *swig_b1 = (SatHelper::Socket *)swig_b0;
  result = (uint64_t)(swig_b1)->AvailableData();
  _swig_go_result = result; 
  return _swig_go_result;
}


SatHelper::IPAddress *_wrap_TcpClient_GetAddress_SatHelper_9d76377ed7889403(SatHelper::TcpClient *_swig_go_0) {
  SatHelper::TcpClient *arg1 = (SatHelper::TcpClient *) 0 ;
  SatHelper::IPAddress result;
  SatHelper::IPAddress *_swig_go_result;
  
  arg1 = *(SatHelper::TcpClient **)&_swig_go_0; 
  
  SatHelper::TcpSocket *swig_b0 = (SatHelper::TcpSocket *)arg1;
  SatHelper::Socket *swig_b1 = (SatHelper::Socket *)swig_b0;
  result = ((SatHelper::Socket const *)swig_b1)->GetAddress();
  *(SatHelper::IPAddress **)&_swig_go_result = new SatHelper::IPAddress(result); 
  return _swig_go_result;
}


void _wrap_TcpClient_WaitForData_SatHelper_9d76377ed7889403(SatHelper::TcpClient *_swig_go_0, long long _swig_go_1, intgo _swig_go_2) {
  SatHelper::TcpClient *arg1 = (SatHelper::TcpClient *) 0 ;
  uint64_t arg2 ;
  uint32_t arg3 ;
  
  arg1 = *(SatHelper::TcpClient **)&_swig_go_0; 
  arg2 = (uint64_t)_swig_go_1; 
  arg3 = (uint32_t)_swig_go_2; 
  
  SatHelper::TcpSocket *swig_b0 = (SatHelper::TcpSocket *)arg1;
  SatHelper::Socket *swig_b1 = (SatHelper::Socket *)swig_b0;
  (swig_b1)->WaitForData(arg2,arg3);
  
}


SatHelper::UdpSocket *_wrap_new_UdpSocket__SWIG_0_SatHelper_9d76377ed7889403() {
  SatHelper::UdpSocket *result = 0 ;
  SatHelper::UdpSocket *_swig_go_result;
  
  
  result = (SatHelper::UdpSocket *)new SatHelper::UdpSocket();
  *(SatHelper::UdpSocket **)&_swig_go_result = (SatHelper::UdpSocket *)result; 
  return _swig_go_result;
}


SatHelper::UdpSocket *_wrap_new_UdpSocket__SWIG_1_SatHelper_9d76377ed7889403(SatHelper::IPAddress *_swig_go_0) {
  SatHelper::IPAddress arg1 ;
  SatHelper::IPAddress *argp1 ;
  SatHelper::UdpSocket *result = 0 ;
  SatHelper::UdpSocket *_swig_go_result;
  
  
  argp1 = (SatHelper::IPAddress *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null SatHelper::IPAddress");
  }
  arg1 = (SatHelper::IPAddress)*argp1;
  
  
  result = (SatHelper::UdpSocket *)new SatHelper::UdpSocket(arg1);
  *(SatHelper::UdpSocket **)&_swig_go_result = (SatHelper::UdpSocket *)result; 
  return _swig_go_result;
}


SatHelper::UdpSocket *_wrap_new_UdpSocket__SWIG_2_SatHelper_9d76377ed7889403(_gostring_ _swig_go_0) {
  std::string arg1 ;
  SatHelper::UdpSocket *result = 0 ;
  SatHelper::UdpSocket *_swig_go_result;
  
  (&arg1)->assign(_swig_go_0.p, _swig_go_0.n); 
  
  result = (SatHelper::UdpSocket *)new SatHelper::UdpSocket(arg1);
  *(SatHelper::UdpSocket **)&_swig_go_result = (SatHelper::UdpSocket *)result; 
  return _swig_go_result;
}


SatHelper::UdpSocket *_wrap_new_UdpSocket__SWIG_3_SatHelper_9d76377ed7889403(SatHelper::UdpSocket *_swig_go_0) {
  SatHelper::UdpSocket *arg1 = 0 ;
  SatHelper::UdpSocket *result = 0 ;
  SatHelper::UdpSocket *_swig_go_result;
  
  arg1 = *(SatHelper::UdpSocket **)&_swig_go_0; 
  
  result = (SatHelper::UdpSocket *)new SatHelper::UdpSocket((SatHelper::UdpSocket const &)*arg1);
  *(SatHelper::UdpSocket **)&_swig_go_result = (SatHelper::UdpSocket *)result; 
  return _swig_go_result;
}


void _wrap_UdpSocket_Bind__SWIG_0_SatHelper_9d76377ed7889403(SatHelper::UdpSocket *_swig_go_0, intgo _swig_go_1) {
  SatHelper::UdpSocket *arg1 = (SatHelper::UdpSocket *) 0 ;
  int arg2 ;
  
  arg1 = *(SatHelper::UdpSocket **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  (arg1)->Bind(arg2);
  
}


intgo _wrap_UdpSocket_GetPort_SatHelper_9d76377ed7889403(SatHelper::UdpSocket *_swig_go_0) {
  SatHelper::UdpSocket *arg1 = (SatHelper::UdpSocket *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(SatHelper::UdpSocket **)&_swig_go_0; 
  
  result = (int)(arg1)->GetPort();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_UdpSocket_Bind__SWIG_1_SatHelper_9d76377ed7889403(SatHelper::UdpSocket *_swig_go_0, _gostring_ _swig_go_1) {
  SatHelper::UdpSocket *arg1 = (SatHelper::UdpSocket *) 0 ;
  std::string arg2 ;
  
  arg1 = *(SatHelper::UdpSocket **)&_swig_go_0; 
  (&arg2)->assign(_swig_go_1.p, _swig_go_1.n); 
  
  (arg1)->Bind(arg2);
  
}


void _wrap_delete_UdpSocket_SatHelper_9d76377ed7889403(SatHelper::UdpSocket *_swig_go_0) {
  SatHelper::UdpSocket *arg1 = (SatHelper::UdpSocket *) 0 ;
  
  arg1 = *(SatHelper::UdpSocket **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_UdpSocket_Receive_SatHelper_9d76377ed7889403(SatHelper::UdpSocket *_swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2) {
  SatHelper::UdpSocket *arg1 = (SatHelper::UdpSocket *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  
  arg1 = *(SatHelper::UdpSocket **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (int)_swig_go_2; 
  
  SatHelper::Socket *swig_b0 = (SatHelper::Socket *)arg1;
  (swig_b0)->Receive(arg2,arg3);
  
  free(arg2); 
}


void _wrap_UdpSocket_Send_SatHelper_9d76377ed7889403(SatHelper::UdpSocket *_swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2) {
  SatHelper::UdpSocket *arg1 = (SatHelper::UdpSocket *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  
  arg1 = *(SatHelper::UdpSocket **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (int)_swig_go_2; 
  
  SatHelper::Socket *swig_b0 = (SatHelper::Socket *)arg1;
  (swig_b0)->Send(arg2,arg3);
  
  free(arg2); 
}


void _wrap_UdpSocket_SendTo_SatHelper_9d76377ed7889403(SatHelper::UdpSocket *_swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2, SatHelper::IPAddress *_swig_go_3, intgo _swig_go_4) {
  SatHelper::UdpSocket *arg1 = (SatHelper::UdpSocket *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  SatHelper::IPAddress arg4 ;
  int arg5 ;
  SatHelper::IPAddress *argp4 ;
  
  arg1 = *(SatHelper::UdpSocket **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (int)_swig_go_2; 
  
  argp4 = (SatHelper::IPAddress *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null SatHelper::IPAddress");
  }
  arg4 = (SatHelper::IPAddress)*argp4;
  
  arg5 = (int)_swig_go_4; 
  
  SatHelper::Socket *swig_b0 = (SatHelper::Socket *)arg1;
  (swig_b0)->SendTo(arg2,arg3,arg4,arg5);
  
  free(arg2); 
}


intgo _wrap_UdpSocket_ReceiveFrom_SatHelper_9d76377ed7889403(SatHelper::UdpSocket *_swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2, SatHelper::IPAddress *_swig_go_3, intgo _swig_go_4) {
  SatHelper::UdpSocket *arg1 = (SatHelper::UdpSocket *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  SatHelper::IPAddress arg4 ;
  int arg5 ;
  SatHelper::IPAddress *argp4 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(SatHelper::UdpSocket **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (int)_swig_go_2; 
  
  argp4 = (SatHelper::IPAddress *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null SatHelper::IPAddress");
  }
  arg4 = (SatHelper::IPAddress)*argp4;
  
  arg5 = (int)_swig_go_4; 
  
  SatHelper::Socket *swig_b0 = (SatHelper::Socket *)arg1;
  result = (int)(swig_b0)->ReceiveFrom(arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


long long _wrap_UdpSocket_AvailableData_SatHelper_9d76377ed7889403(SatHelper::UdpSocket *_swig_go_0) {
  SatHelper::UdpSocket *arg1 = (SatHelper::UdpSocket *) 0 ;
  uint64_t result;
  long long _swig_go_result;
  
  arg1 = *(SatHelper::UdpSocket **)&_swig_go_0; 
  
  SatHelper::Socket *swig_b0 = (SatHelper::Socket *)arg1;
  result = (uint64_t)(swig_b0)->AvailableData();
  _swig_go_result = result; 
  return _swig_go_result;
}


SatHelper::IPAddress *_wrap_UdpSocket_GetAddress_SatHelper_9d76377ed7889403(SatHelper::UdpSocket *_swig_go_0) {
  SatHelper::UdpSocket *arg1 = (SatHelper::UdpSocket *) 0 ;
  SatHelper::IPAddress result;
  SatHelper::IPAddress *_swig_go_result;
  
  arg1 = *(SatHelper::UdpSocket **)&_swig_go_0; 
  
  SatHelper::Socket *swig_b0 = (SatHelper::Socket *)arg1;
  result = ((SatHelper::Socket const *)swig_b0)->GetAddress();
  *(SatHelper::IPAddress **)&_swig_go_result = new SatHelper::IPAddress(result); 
  return _swig_go_result;
}


void _wrap_UdpSocket_WaitForData_SatHelper_9d76377ed7889403(SatHelper::UdpSocket *_swig_go_0, long long _swig_go_1, intgo _swig_go_2) {
  SatHelper::UdpSocket *arg1 = (SatHelper::UdpSocket *) 0 ;
  uint64_t arg2 ;
  uint32_t arg3 ;
  
  arg1 = *(SatHelper::UdpSocket **)&_swig_go_0; 
  arg2 = (uint64_t)_swig_go_1; 
  arg3 = (uint32_t)_swig_go_2; 
  
  SatHelper::Socket *swig_b0 = (SatHelper::Socket *)arg1;
  (swig_b0)->WaitForData(arg2,arg3);
  
}


void _wrap_UdpSocket_Close_SatHelper_9d76377ed7889403(SatHelper::UdpSocket *_swig_go_0) {
  SatHelper::UdpSocket *arg1 = (SatHelper::UdpSocket *) 0 ;
  
  arg1 = *(SatHelper::UdpSocket **)&_swig_go_0; 
  
  SatHelper::Socket *swig_b0 = (SatHelper::Socket *)arg1;
  (swig_b0)->Close();
  
}


void _wrap_DeRandomizer_DeRandomize_SatHelper_9d76377ed7889403(char *_swig_go_0, intgo _swig_go_1) {
  uint8_t *arg1 = (uint8_t *) 0 ;
  int arg2 ;
  
  arg1 = *(uint8_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  SatHelper::DeRandomizer::DeRandomize(arg1,arg2);
  
}


SatHelper::DeRandomizer *_wrap_new_DeRandomizer_SatHelper_9d76377ed7889403() {
  SatHelper::DeRandomizer *result = 0 ;
  SatHelper::DeRandomizer *_swig_go_result;
  
  
  result = (SatHelper::DeRandomizer *)new SatHelper::DeRandomizer();
  *(SatHelper::DeRandomizer **)&_swig_go_result = (SatHelper::DeRandomizer *)result; 
  return _swig_go_result;
}


void _wrap_delete_DeRandomizer_SatHelper_9d76377ed7889403(SatHelper::DeRandomizer *_swig_go_0) {
  SatHelper::DeRandomizer *arg1 = (SatHelper::DeRandomizer *) 0 ;
  
  arg1 = *(SatHelper::DeRandomizer **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_Tools_swapEndianess_SatHelper_9d76377ed7889403(intgo _swig_go_0) {
  uint32_t arg1 ;
  uint32_t result;
  intgo _swig_go_result;
  
  arg1 = (uint32_t)_swig_go_0; 
  
  result = (uint32_t)SatHelper::Tools::swapEndianess(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_Tools_getTimestamp_SatHelper_9d76377ed7889403() {
  uint32_t result;
  intgo _swig_go_result;
  
  
  result = (uint32_t)SatHelper::Tools::getTimestamp();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_Tools_makedir_SatHelper_9d76377ed7889403(_gostring_ _swig_go_0) {
  std::string *arg1 = 0 ;
  
  
  std::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;
  
  
  SatHelper::Tools::makedir((std::string const &)*arg1);
  
}


_Complex float _wrap_Tools_phase2complex_SatHelper_9d76377ed7889403(float _swig_go_0) {
  float arg1 ;
  std::complex< float > result;
  _Complex float _swig_go_result;
  
  arg1 = (float)_swig_go_0; 
  
  result = SatHelper::Tools::phase2complex(arg1);
  *(std::complex< float > **)&_swig_go_result = new std::complex< float >(result); 
  return _swig_go_result;
}


float _wrap_Tools_clip_SatHelper_9d76377ed7889403(float _swig_go_0, float _swig_go_1) {
  float arg1 ;
  float arg2 ;
  float result;
  float _swig_go_result;
  
  arg1 = (float)_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  result = (float)SatHelper::Tools::clip(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


SatHelper::Tools *_wrap_new_Tools_SatHelper_9d76377ed7889403() {
  SatHelper::Tools *result = 0 ;
  SatHelper::Tools *_swig_go_result;
  
  
  result = (SatHelper::Tools *)new SatHelper::Tools();
  *(SatHelper::Tools **)&_swig_go_result = (SatHelper::Tools *)result; 
  return _swig_go_result;
}


void _wrap_delete_Tools_SatHelper_9d76377ed7889403(SatHelper::Tools *_swig_go_0) {
  SatHelper::Tools *arg1 = (SatHelper::Tools *) 0 ;
  
  arg1 = *(SatHelper::Tools **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_DifferentialEncoding_nrzmDecode_SatHelper_9d76377ed7889403(char *_swig_go_0, intgo _swig_go_1) {
  uint8_t *arg1 = (uint8_t *) 0 ;
  int arg2 ;
  
  arg1 = *(uint8_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  SatHelper::DifferentialEncoding::nrzmDecode(arg1,arg2);
  
}


SatHelper::DifferentialEncoding *_wrap_new_DifferentialEncoding_SatHelper_9d76377ed7889403() {
  SatHelper::DifferentialEncoding *result = 0 ;
  SatHelper::DifferentialEncoding *_swig_go_result;
  
  
  result = (SatHelper::DifferentialEncoding *)new SatHelper::DifferentialEncoding();
  *(SatHelper::DifferentialEncoding **)&_swig_go_result = (SatHelper::DifferentialEncoding *)result; 
  return _swig_go_result;
}


void _wrap_delete_DifferentialEncoding_SatHelper_9d76377ed7889403(SatHelper::DifferentialEncoding *_swig_go_0) {
  SatHelper::DifferentialEncoding *arg1 = (SatHelper::DifferentialEncoding *) 0 ;
  
  arg1 = *(SatHelper::DifferentialEncoding **)&_swig_go_0; 
  
  delete arg1;
  
}


SatHelper::AGC *_wrap_new_AGC__SWIG_0_SatHelper_9d76377ed7889403(float _swig_go_0, float _swig_go_1, float _swig_go_2, float _swig_go_3) {
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  SatHelper::AGC *result = 0 ;
  SatHelper::AGC *_swig_go_result;
  
  arg1 = (float)_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  
  result = (SatHelper::AGC *)new SatHelper::AGC(arg1,arg2,arg3,arg4);
  *(SatHelper::AGC **)&_swig_go_result = (SatHelper::AGC *)result; 
  return _swig_go_result;
}


SatHelper::AGC *_wrap_new_AGC__SWIG_1_SatHelper_9d76377ed7889403(float _swig_go_0, float _swig_go_1, float _swig_go_2) {
  float arg1 ;
  float arg2 ;
  float arg3 ;
  SatHelper::AGC *result = 0 ;
  SatHelper::AGC *_swig_go_result;
  
  arg1 = (float)_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  
  result = (SatHelper::AGC *)new SatHelper::AGC(arg1,arg2,arg3);
  *(SatHelper::AGC **)&_swig_go_result = (SatHelper::AGC *)result; 
  return _swig_go_result;
}


SatHelper::AGC *_wrap_new_AGC__SWIG_2_SatHelper_9d76377ed7889403(float _swig_go_0, float _swig_go_1) {
  float arg1 ;
  float arg2 ;
  SatHelper::AGC *result = 0 ;
  SatHelper::AGC *_swig_go_result;
  
  arg1 = (float)_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  result = (SatHelper::AGC *)new SatHelper::AGC(arg1,arg2);
  *(SatHelper::AGC **)&_swig_go_result = (SatHelper::AGC *)result; 
  return _swig_go_result;
}


SatHelper::AGC *_wrap_new_AGC__SWIG_3_SatHelper_9d76377ed7889403(float _swig_go_0) {
  float arg1 ;
  SatHelper::AGC *result = 0 ;
  SatHelper::AGC *_swig_go_result;
  
  arg1 = (float)_swig_go_0; 
  
  result = (SatHelper::AGC *)new SatHelper::AGC(arg1);
  *(SatHelper::AGC **)&_swig_go_result = (SatHelper::AGC *)result; 
  return _swig_go_result;
}


SatHelper::AGC *_wrap_new_AGC__SWIG_4_SatHelper_9d76377ed7889403() {
  SatHelper::AGC *result = 0 ;
  SatHelper::AGC *_swig_go_result;
  
  
  result = (SatHelper::AGC *)new SatHelper::AGC();
  *(SatHelper::AGC **)&_swig_go_result = (SatHelper::AGC *)result; 
  return _swig_go_result;
}


float _wrap_AGC_GetRate_SatHelper_9d76377ed7889403(SatHelper::AGC *_swig_go_0) {
  SatHelper::AGC *arg1 = (SatHelper::AGC *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(SatHelper::AGC **)&_swig_go_0; 
  
  result = (float)((SatHelper::AGC const *)arg1)->GetRate();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_AGC_GetReference_SatHelper_9d76377ed7889403(SatHelper::AGC *_swig_go_0) {
  SatHelper::AGC *arg1 = (SatHelper::AGC *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(SatHelper::AGC **)&_swig_go_0; 
  
  result = (float)((SatHelper::AGC const *)arg1)->GetReference();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_AGC_GetGain_SatHelper_9d76377ed7889403(SatHelper::AGC *_swig_go_0) {
  SatHelper::AGC *arg1 = (SatHelper::AGC *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(SatHelper::AGC **)&_swig_go_0; 
  
  result = (float)((SatHelper::AGC const *)arg1)->GetGain();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_AGC_GetMaxGain_SatHelper_9d76377ed7889403(SatHelper::AGC *_swig_go_0) {
  SatHelper::AGC *arg1 = (SatHelper::AGC *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(SatHelper::AGC **)&_swig_go_0; 
  
  result = (float)((SatHelper::AGC const *)arg1)->GetMaxGain();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_AGC_SetRate_SatHelper_9d76377ed7889403(SatHelper::AGC *_swig_go_0, float _swig_go_1) {
  SatHelper::AGC *arg1 = (SatHelper::AGC *) 0 ;
  float arg2 ;
  
  arg1 = *(SatHelper::AGC **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  (arg1)->SetRate(arg2);
  
}


void _wrap_AGC_SetReference_SatHelper_9d76377ed7889403(SatHelper::AGC *_swig_go_0, float _swig_go_1) {
  SatHelper::AGC *arg1 = (SatHelper::AGC *) 0 ;
  float arg2 ;
  
  arg1 = *(SatHelper::AGC **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  (arg1)->SetReference(arg2);
  
}


void _wrap_AGC_SetGain_SatHelper_9d76377ed7889403(SatHelper::AGC *_swig_go_0, float _swig_go_1) {
  SatHelper::AGC *arg1 = (SatHelper::AGC *) 0 ;
  float arg2 ;
  
  arg1 = *(SatHelper::AGC **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  (arg1)->SetGain(arg2);
  
}


void _wrap_AGC_SetMaxGain_SatHelper_9d76377ed7889403(SatHelper::AGC *_swig_go_0, float _swig_go_1) {
  SatHelper::AGC *arg1 = (SatHelper::AGC *) 0 ;
  float arg2 ;
  
  arg1 = *(SatHelper::AGC **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  (arg1)->SetMaxGain(arg2);
  
}


_Complex float _wrap_AGC_scale_SatHelper_9d76377ed7889403(SatHelper::AGC *_swig_go_0, _Complex float *_swig_go_1) {
  SatHelper::AGC *arg1 = (SatHelper::AGC *) 0 ;
  std::complex< float > *arg2 = (std::complex< float > *) 0 ;
  std::complex< float > result;
  _Complex float _swig_go_result;
  
  arg1 = *(SatHelper::AGC **)&_swig_go_0; 
  arg2 = *(std::complex< float > **)&_swig_go_1; 
  
  result = (arg1)->scale((std::complex< float > const *)arg2);
  *(std::complex< float > **)&_swig_go_result = new std::complex< float >(result); 
  return _swig_go_result;
}


void _wrap_AGC_scaleN_SatHelper_9d76377ed7889403(SatHelper::AGC *_swig_go_0, _Complex float *_swig_go_1, _Complex float *_swig_go_2, intgo _swig_go_3) {
  SatHelper::AGC *arg1 = (SatHelper::AGC *) 0 ;
  std::complex< float > *arg2 = (std::complex< float > *) 0 ;
  std::complex< float > *arg3 = (std::complex< float > *) 0 ;
  unsigned int arg4 ;
  
  arg1 = *(SatHelper::AGC **)&_swig_go_0; 
  arg2 = *(std::complex< float > **)&_swig_go_1; 
  arg3 = *(std::complex< float > **)&_swig_go_2; 
  arg4 = (unsigned int)_swig_go_3; 
  
  (arg1)->scaleN(arg2,(std::complex< float > const *)arg3,arg4);
  
}


void _wrap_AGC_Work_SatHelper_9d76377ed7889403(SatHelper::AGC *_swig_go_0, _Complex float *_swig_go_1, _Complex float *_swig_go_2, intgo _swig_go_3) {
  SatHelper::AGC *arg1 = (SatHelper::AGC *) 0 ;
  std::complex< float > *arg2 = (std::complex< float > *) 0 ;
  std::complex< float > *arg3 = (std::complex< float > *) 0 ;
  int arg4 ;
  
  arg1 = *(SatHelper::AGC **)&_swig_go_0; 
  arg2 = *(std::complex< float > **)&_swig_go_1; 
  arg3 = *(std::complex< float > **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  (arg1)->Work(arg2,arg3,arg4);
  
}


void _wrap_delete_AGC_SatHelper_9d76377ed7889403(SatHelper::AGC *_swig_go_0) {
  SatHelper::AGC *arg1 = (SatHelper::AGC *) 0 ;
  
  arg1 = *(SatHelper::AGC **)&_swig_go_0; 
  
  delete arg1;
  
}


SatHelper::ClockRecovery *_wrap_new_ClockRecovery_SatHelper_9d76377ed7889403(float _swig_go_0, float _swig_go_1, float _swig_go_2, float _swig_go_3, float _swig_go_4) {
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  SatHelper::ClockRecovery *result = 0 ;
  SatHelper::ClockRecovery *_swig_go_result;
  
  arg1 = (float)_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  arg5 = (float)_swig_go_4; 
  
  result = (SatHelper::ClockRecovery *)new SatHelper::ClockRecovery(arg1,arg2,arg3,arg4,arg5);
  *(SatHelper::ClockRecovery **)&_swig_go_result = (SatHelper::ClockRecovery *)result; 
  return _swig_go_result;
}


void _wrap_delete_ClockRecovery_SatHelper_9d76377ed7889403(SatHelper::ClockRecovery *_swig_go_0) {
  SatHelper::ClockRecovery *arg1 = (SatHelper::ClockRecovery *) 0 ;
  
  arg1 = *(SatHelper::ClockRecovery **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_ClockRecovery_Work_SatHelper_9d76377ed7889403(SatHelper::ClockRecovery *_swig_go_0, _Complex float *_swig_go_1, _Complex float *_swig_go_2, intgo _swig_go_3) {
  SatHelper::ClockRecovery *arg1 = (SatHelper::ClockRecovery *) 0 ;
  std::complex< float > *arg2 = (std::complex< float > *) 0 ;
  std::complex< float > *arg3 = (std::complex< float > *) 0 ;
  int arg4 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(SatHelper::ClockRecovery **)&_swig_go_0; 
  arg2 = *(std::complex< float > **)&_swig_go_1; 
  arg3 = *(std::complex< float > **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  result = (int)(arg1)->Work(arg2,arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_ClockRecovery_GetMu_SatHelper_9d76377ed7889403(SatHelper::ClockRecovery *_swig_go_0) {
  SatHelper::ClockRecovery *arg1 = (SatHelper::ClockRecovery *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(SatHelper::ClockRecovery **)&_swig_go_0; 
  
  result = (float)((SatHelper::ClockRecovery const *)arg1)->GetMu();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_ClockRecovery_GetOmega_SatHelper_9d76377ed7889403(SatHelper::ClockRecovery *_swig_go_0) {
  SatHelper::ClockRecovery *arg1 = (SatHelper::ClockRecovery *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(SatHelper::ClockRecovery **)&_swig_go_0; 
  
  result = (float)((SatHelper::ClockRecovery const *)arg1)->GetOmega();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_ClockRecovery_GetGainMu_SatHelper_9d76377ed7889403(SatHelper::ClockRecovery *_swig_go_0) {
  SatHelper::ClockRecovery *arg1 = (SatHelper::ClockRecovery *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(SatHelper::ClockRecovery **)&_swig_go_0; 
  
  result = (float)((SatHelper::ClockRecovery const *)arg1)->GetGainMu();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_ClockRecovery_GetGainOmega_SatHelper_9d76377ed7889403(SatHelper::ClockRecovery *_swig_go_0) {
  SatHelper::ClockRecovery *arg1 = (SatHelper::ClockRecovery *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(SatHelper::ClockRecovery **)&_swig_go_0; 
  
  result = (float)((SatHelper::ClockRecovery const *)arg1)->GetGainOmega();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ClockRecovery_SetGainMu_SatHelper_9d76377ed7889403(SatHelper::ClockRecovery *_swig_go_0, float _swig_go_1) {
  SatHelper::ClockRecovery *arg1 = (SatHelper::ClockRecovery *) 0 ;
  float arg2 ;
  
  arg1 = *(SatHelper::ClockRecovery **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  (arg1)->SetGainMu(arg2);
  
}


void _wrap_ClockRecovery_SetGainOmega_SatHelper_9d76377ed7889403(SatHelper::ClockRecovery *_swig_go_0, float _swig_go_1) {
  SatHelper::ClockRecovery *arg1 = (SatHelper::ClockRecovery *) 0 ;
  float arg2 ;
  
  arg1 = *(SatHelper::ClockRecovery **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  (arg1)->SetGainOmega(arg2);
  
}


void _wrap_ClockRecovery_SetMu_SatHelper_9d76377ed7889403(SatHelper::ClockRecovery *_swig_go_0, float _swig_go_1) {
  SatHelper::ClockRecovery *arg1 = (SatHelper::ClockRecovery *) 0 ;
  float arg2 ;
  
  arg1 = *(SatHelper::ClockRecovery **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  (arg1)->SetMu(arg2);
  
}


void _wrap_ClockRecovery_SetOmega_SatHelper_9d76377ed7889403(SatHelper::ClockRecovery *_swig_go_0, float _swig_go_1) {
  SatHelper::ClockRecovery *arg1 = (SatHelper::ClockRecovery *) 0 ;
  float arg2 ;
  
  arg1 = *(SatHelper::ClockRecovery **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  (arg1)->SetOmega(arg2);
  
}


SatHelper::ControlLoop *_wrap_new_ControlLoop_SatHelper_9d76377ed7889403(float _swig_go_0, float _swig_go_1, float _swig_go_2) {
  float arg1 ;
  float arg2 ;
  float arg3 ;
  SatHelper::ControlLoop *result = 0 ;
  SatHelper::ControlLoop *_swig_go_result;
  
  arg1 = (float)_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  
  result = (SatHelper::ControlLoop *)new SatHelper::ControlLoop(arg1,arg2,arg3);
  *(SatHelper::ControlLoop **)&_swig_go_result = (SatHelper::ControlLoop *)result; 
  return _swig_go_result;
}


void _wrap_delete_ControlLoop_SatHelper_9d76377ed7889403(SatHelper::ControlLoop *_swig_go_0) {
  SatHelper::ControlLoop *arg1 = (SatHelper::ControlLoop *) 0 ;
  
  arg1 = *(SatHelper::ControlLoop **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_ControlLoop_SetLoopBandwidth_SatHelper_9d76377ed7889403(SatHelper::ControlLoop *_swig_go_0, float _swig_go_1) {
  SatHelper::ControlLoop *arg1 = (SatHelper::ControlLoop *) 0 ;
  float arg2 ;
  
  arg1 = *(SatHelper::ControlLoop **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  (arg1)->SetLoopBandwidth(arg2);
  
}


void _wrap_ControlLoop_SetDampingFactor_SatHelper_9d76377ed7889403(SatHelper::ControlLoop *_swig_go_0, float _swig_go_1) {
  SatHelper::ControlLoop *arg1 = (SatHelper::ControlLoop *) 0 ;
  float arg2 ;
  
  arg1 = *(SatHelper::ControlLoop **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  (arg1)->SetDampingFactor(arg2);
  
}


void _wrap_ControlLoop_SetAlpha_SatHelper_9d76377ed7889403(SatHelper::ControlLoop *_swig_go_0, float _swig_go_1) {
  SatHelper::ControlLoop *arg1 = (SatHelper::ControlLoop *) 0 ;
  float arg2 ;
  
  arg1 = *(SatHelper::ControlLoop **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  (arg1)->SetAlpha(arg2);
  
}


void _wrap_ControlLoop_SetBeta_SatHelper_9d76377ed7889403(SatHelper::ControlLoop *_swig_go_0, float _swig_go_1) {
  SatHelper::ControlLoop *arg1 = (SatHelper::ControlLoop *) 0 ;
  float arg2 ;
  
  arg1 = *(SatHelper::ControlLoop **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  (arg1)->SetBeta(arg2);
  
}


void _wrap_ControlLoop_SetFrequency_SatHelper_9d76377ed7889403(SatHelper::ControlLoop *_swig_go_0, float _swig_go_1) {
  SatHelper::ControlLoop *arg1 = (SatHelper::ControlLoop *) 0 ;
  float arg2 ;
  
  arg1 = *(SatHelper::ControlLoop **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  (arg1)->SetFrequency(arg2);
  
}


void _wrap_ControlLoop_Reset_SatHelper_9d76377ed7889403(SatHelper::ControlLoop *_swig_go_0) {
  SatHelper::ControlLoop *arg1 = (SatHelper::ControlLoop *) 0 ;
  
  arg1 = *(SatHelper::ControlLoop **)&_swig_go_0; 
  
  (arg1)->Reset();
  
}


void _wrap_ControlLoop_UpdateGains_SatHelper_9d76377ed7889403(SatHelper::ControlLoop *_swig_go_0) {
  SatHelper::ControlLoop *arg1 = (SatHelper::ControlLoop *) 0 ;
  
  arg1 = *(SatHelper::ControlLoop **)&_swig_go_0; 
  
  (arg1)->UpdateGains();
  
}


void _wrap_ControlLoop_SetPhase_SatHelper_9d76377ed7889403(SatHelper::ControlLoop *_swig_go_0, float _swig_go_1) {
  SatHelper::ControlLoop *arg1 = (SatHelper::ControlLoop *) 0 ;
  float arg2 ;
  
  arg1 = *(SatHelper::ControlLoop **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  (arg1)->SetPhase(arg2);
  
}


void _wrap_ControlLoop_AdvanceLoop_SatHelper_9d76377ed7889403(SatHelper::ControlLoop *_swig_go_0, float _swig_go_1) {
  SatHelper::ControlLoop *arg1 = (SatHelper::ControlLoop *) 0 ;
  float arg2 ;
  
  arg1 = *(SatHelper::ControlLoop **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  (arg1)->AdvanceLoop(arg2);
  
}


void _wrap_ControlLoop_SetRelativeMaxFrequency_SatHelper_9d76377ed7889403(SatHelper::ControlLoop *_swig_go_0, float _swig_go_1) {
  SatHelper::ControlLoop *arg1 = (SatHelper::ControlLoop *) 0 ;
  float arg2 ;
  
  arg1 = *(SatHelper::ControlLoop **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  (arg1)->SetRelativeMaxFrequency(arg2);
  
}


void _wrap_ControlLoop_SetRelativeMinFrequency_SatHelper_9d76377ed7889403(SatHelper::ControlLoop *_swig_go_0, float _swig_go_1) {
  SatHelper::ControlLoop *arg1 = (SatHelper::ControlLoop *) 0 ;
  float arg2 ;
  
  arg1 = *(SatHelper::ControlLoop **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  (arg1)->SetRelativeMinFrequency(arg2);
  
}


float _wrap_ControlLoop_GetLoopBandwidth_SatHelper_9d76377ed7889403(SatHelper::ControlLoop *_swig_go_0) {
  SatHelper::ControlLoop *arg1 = (SatHelper::ControlLoop *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(SatHelper::ControlLoop **)&_swig_go_0; 
  
  result = (float)((SatHelper::ControlLoop const *)arg1)->GetLoopBandwidth();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_ControlLoop_GetDampingFactor_SatHelper_9d76377ed7889403(SatHelper::ControlLoop *_swig_go_0) {
  SatHelper::ControlLoop *arg1 = (SatHelper::ControlLoop *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(SatHelper::ControlLoop **)&_swig_go_0; 
  
  result = (float)((SatHelper::ControlLoop const *)arg1)->GetDampingFactor();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_ControlLoop_GetAlpha_SatHelper_9d76377ed7889403(SatHelper::ControlLoop *_swig_go_0) {
  SatHelper::ControlLoop *arg1 = (SatHelper::ControlLoop *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(SatHelper::ControlLoop **)&_swig_go_0; 
  
  result = (float)((SatHelper::ControlLoop const *)arg1)->GetAlpha();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_ControlLoop_GetBeta_SatHelper_9d76377ed7889403(SatHelper::ControlLoop *_swig_go_0) {
  SatHelper::ControlLoop *arg1 = (SatHelper::ControlLoop *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(SatHelper::ControlLoop **)&_swig_go_0; 
  
  result = (float)((SatHelper::ControlLoop const *)arg1)->GetBeta();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_ControlLoop_GetRelativeFrequency_SatHelper_9d76377ed7889403(SatHelper::ControlLoop *_swig_go_0) {
  SatHelper::ControlLoop *arg1 = (SatHelper::ControlLoop *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(SatHelper::ControlLoop **)&_swig_go_0; 
  
  result = (float)((SatHelper::ControlLoop const *)arg1)->GetRelativeFrequency();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_ControlLoop_GetPhase_SatHelper_9d76377ed7889403(SatHelper::ControlLoop *_swig_go_0) {
  SatHelper::ControlLoop *arg1 = (SatHelper::ControlLoop *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(SatHelper::ControlLoop **)&_swig_go_0; 
  
  result = (float)((SatHelper::ControlLoop const *)arg1)->GetPhase();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_ControlLoop_GetMaxRelativeFrequency_SatHelper_9d76377ed7889403(SatHelper::ControlLoop *_swig_go_0) {
  SatHelper::ControlLoop *arg1 = (SatHelper::ControlLoop *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(SatHelper::ControlLoop **)&_swig_go_0; 
  
  result = (float)((SatHelper::ControlLoop const *)arg1)->GetMaxRelativeFrequency();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_ControlLoop_GetMinRelativeFrequency_SatHelper_9d76377ed7889403(SatHelper::ControlLoop *_swig_go_0) {
  SatHelper::ControlLoop *arg1 = (SatHelper::ControlLoop *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(SatHelper::ControlLoop **)&_swig_go_0; 
  
  result = (float)((SatHelper::ControlLoop const *)arg1)->GetMinRelativeFrequency();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ControlLoop_FrequencyLimit_SatHelper_9d76377ed7889403(SatHelper::ControlLoop *_swig_go_0) {
  SatHelper::ControlLoop *arg1 = (SatHelper::ControlLoop *) 0 ;
  
  arg1 = *(SatHelper::ControlLoop **)&_swig_go_0; 
  
  (arg1)->FrequencyLimit();
  
}


void _wrap_ControlLoop_PhaseWrap_SatHelper_9d76377ed7889403(SatHelper::ControlLoop *_swig_go_0) {
  SatHelper::ControlLoop *arg1 = (SatHelper::ControlLoop *) 0 ;
  
  arg1 = *(SatHelper::ControlLoop **)&_swig_go_0; 
  
  (arg1)->PhaseWrap();
  
}


SatHelper::CostasLoop *_wrap_new_CostasLoop__SWIG_0_SatHelper_9d76377ed7889403(float _swig_go_0, intgo _swig_go_1) {
  float arg1 ;
  int arg2 ;
  SatHelper::CostasLoop *result = 0 ;
  SatHelper::CostasLoop *_swig_go_result;
  
  arg1 = (float)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (SatHelper::CostasLoop *)new SatHelper::CostasLoop(arg1,arg2);
  *(SatHelper::CostasLoop **)&_swig_go_result = (SatHelper::CostasLoop *)result; 
  return _swig_go_result;
}


SatHelper::CostasLoop *_wrap_new_CostasLoop__SWIG_1_SatHelper_9d76377ed7889403(float _swig_go_0, intgo _swig_go_1, float _swig_go_2, float _swig_go_3) {
  float arg1 ;
  int arg2 ;
  float arg3 ;
  float arg4 ;
  SatHelper::CostasLoop *result = 0 ;
  SatHelper::CostasLoop *_swig_go_result;
  
  arg1 = (float)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  
  result = (SatHelper::CostasLoop *)new SatHelper::CostasLoop(arg1,arg2,arg3,arg4);
  *(SatHelper::CostasLoop **)&_swig_go_result = (SatHelper::CostasLoop *)result; 
  return _swig_go_result;
}


void _wrap_delete_CostasLoop_SatHelper_9d76377ed7889403(SatHelper::CostasLoop *_swig_go_0) {
  SatHelper::CostasLoop *arg1 = (SatHelper::CostasLoop *) 0 ;
  
  arg1 = *(SatHelper::CostasLoop **)&_swig_go_0; 
  
  delete arg1;
  
}


float _wrap_CostasLoop_GetError_SatHelper_9d76377ed7889403(SatHelper::CostasLoop *_swig_go_0) {
  SatHelper::CostasLoop *arg1 = (SatHelper::CostasLoop *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(SatHelper::CostasLoop **)&_swig_go_0; 
  
  result = (float)((SatHelper::CostasLoop const *)arg1)->GetError();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_CostasLoop_GetFrequency_SatHelper_9d76377ed7889403(SatHelper::CostasLoop *_swig_go_0) {
  SatHelper::CostasLoop *arg1 = (SatHelper::CostasLoop *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(SatHelper::CostasLoop **)&_swig_go_0; 
  
  result = (float)((SatHelper::CostasLoop const *)arg1)->GetFrequency();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_CostasLoop_GetFrequencyHz_SatHelper_9d76377ed7889403(SatHelper::CostasLoop *_swig_go_0) {
  SatHelper::CostasLoop *arg1 = (SatHelper::CostasLoop *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(SatHelper::CostasLoop **)&_swig_go_0; 
  
  result = (float)((SatHelper::CostasLoop const *)arg1)->GetFrequencyHz();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CostasLoop_Reset_SatHelper_9d76377ed7889403(SatHelper::CostasLoop *_swig_go_0) {
  SatHelper::CostasLoop *arg1 = (SatHelper::CostasLoop *) 0 ;
  
  arg1 = *(SatHelper::CostasLoop **)&_swig_go_0; 
  
  (arg1)->Reset();
  
}


void _wrap_CostasLoop_Work__SWIG_0_SatHelper_9d76377ed7889403(SatHelper::CostasLoop *_swig_go_0, _Complex float *_swig_go_1, _Complex float *_swig_go_2, intgo _swig_go_3) {
  SatHelper::CostasLoop *arg1 = (SatHelper::CostasLoop *) 0 ;
  std::complex< float > *arg2 = (std::complex< float > *) 0 ;
  std::complex< float > *arg3 = (std::complex< float > *) 0 ;
  int arg4 ;
  
  arg1 = *(SatHelper::CostasLoop **)&_swig_go_0; 
  arg2 = *(std::complex< float > **)&_swig_go_1; 
  arg3 = *(std::complex< float > **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  (arg1)->Work(arg2,arg3,arg4);
  
}


void _wrap_CostasLoop_Work__SWIG_1_SatHelper_9d76377ed7889403(SatHelper::CostasLoop *_swig_go_0, _Complex float *_swig_go_1, _Complex float *_swig_go_2, float *_swig_go_3, intgo _swig_go_4) {
  SatHelper::CostasLoop *arg1 = (SatHelper::CostasLoop *) 0 ;
  std::complex< float > *arg2 = (std::complex< float > *) 0 ;
  std::complex< float > *arg3 = (std::complex< float > *) 0 ;
  float *arg4 = (float *) 0 ;
  int arg5 ;
  
  arg1 = *(SatHelper::CostasLoop **)&_swig_go_0; 
  arg2 = *(std::complex< float > **)&_swig_go_1; 
  arg3 = *(std::complex< float > **)&_swig_go_2; 
  arg4 = *(float **)&_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  (arg1)->Work(arg2,arg3,arg4,arg5);
  
}


void _wrap_CostasLoop_SetLoopBandwidth_SatHelper_9d76377ed7889403(SatHelper::CostasLoop *_swig_go_0, float _swig_go_1) {
  SatHelper::CostasLoop *arg1 = (SatHelper::CostasLoop *) 0 ;
  float arg2 ;
  
  arg1 = *(SatHelper::CostasLoop **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  SatHelper::ControlLoop *swig_b0 = (SatHelper::ControlLoop *)arg1;
  (swig_b0)->SetLoopBandwidth(arg2);
  
}


void _wrap_CostasLoop_SetDampingFactor_SatHelper_9d76377ed7889403(SatHelper::CostasLoop *_swig_go_0, float _swig_go_1) {
  SatHelper::CostasLoop *arg1 = (SatHelper::CostasLoop *) 0 ;
  float arg2 ;
  
  arg1 = *(SatHelper::CostasLoop **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  SatHelper::ControlLoop *swig_b0 = (SatHelper::ControlLoop *)arg1;
  (swig_b0)->SetDampingFactor(arg2);
  
}


void _wrap_CostasLoop_SetAlpha_SatHelper_9d76377ed7889403(SatHelper::CostasLoop *_swig_go_0, float _swig_go_1) {
  SatHelper::CostasLoop *arg1 = (SatHelper::CostasLoop *) 0 ;
  float arg2 ;
  
  arg1 = *(SatHelper::CostasLoop **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  SatHelper::ControlLoop *swig_b0 = (SatHelper::ControlLoop *)arg1;
  (swig_b0)->SetAlpha(arg2);
  
}


void _wrap_CostasLoop_SetBeta_SatHelper_9d76377ed7889403(SatHelper::CostasLoop *_swig_go_0, float _swig_go_1) {
  SatHelper::CostasLoop *arg1 = (SatHelper::CostasLoop *) 0 ;
  float arg2 ;
  
  arg1 = *(SatHelper::CostasLoop **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  SatHelper::ControlLoop *swig_b0 = (SatHelper::ControlLoop *)arg1;
  (swig_b0)->SetBeta(arg2);
  
}


void _wrap_CostasLoop_SetFrequency_SatHelper_9d76377ed7889403(SatHelper::CostasLoop *_swig_go_0, float _swig_go_1) {
  SatHelper::CostasLoop *arg1 = (SatHelper::CostasLoop *) 0 ;
  float arg2 ;
  
  arg1 = *(SatHelper::CostasLoop **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  SatHelper::ControlLoop *swig_b0 = (SatHelper::ControlLoop *)arg1;
  (swig_b0)->SetFrequency(arg2);
  
}


void _wrap_CostasLoop_UpdateGains_SatHelper_9d76377ed7889403(SatHelper::CostasLoop *_swig_go_0) {
  SatHelper::CostasLoop *arg1 = (SatHelper::CostasLoop *) 0 ;
  
  arg1 = *(SatHelper::CostasLoop **)&_swig_go_0; 
  
  SatHelper::ControlLoop *swig_b0 = (SatHelper::ControlLoop *)arg1;
  (swig_b0)->UpdateGains();
  
}


void _wrap_CostasLoop_SetPhase_SatHelper_9d76377ed7889403(SatHelper::CostasLoop *_swig_go_0, float _swig_go_1) {
  SatHelper::CostasLoop *arg1 = (SatHelper::CostasLoop *) 0 ;
  float arg2 ;
  
  arg1 = *(SatHelper::CostasLoop **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  SatHelper::ControlLoop *swig_b0 = (SatHelper::ControlLoop *)arg1;
  (swig_b0)->SetPhase(arg2);
  
}


void _wrap_CostasLoop_AdvanceLoop_SatHelper_9d76377ed7889403(SatHelper::CostasLoop *_swig_go_0, float _swig_go_1) {
  SatHelper::CostasLoop *arg1 = (SatHelper::CostasLoop *) 0 ;
  float arg2 ;
  
  arg1 = *(SatHelper::CostasLoop **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  SatHelper::ControlLoop *swig_b0 = (SatHelper::ControlLoop *)arg1;
  (swig_b0)->AdvanceLoop(arg2);
  
}


void _wrap_CostasLoop_SetRelativeMaxFrequency_SatHelper_9d76377ed7889403(SatHelper::CostasLoop *_swig_go_0, float _swig_go_1) {
  SatHelper::CostasLoop *arg1 = (SatHelper::CostasLoop *) 0 ;
  float arg2 ;
  
  arg1 = *(SatHelper::CostasLoop **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  SatHelper::ControlLoop *swig_b0 = (SatHelper::ControlLoop *)arg1;
  (swig_b0)->SetRelativeMaxFrequency(arg2);
  
}


void _wrap_CostasLoop_SetRelativeMinFrequency_SatHelper_9d76377ed7889403(SatHelper::CostasLoop *_swig_go_0, float _swig_go_1) {
  SatHelper::CostasLoop *arg1 = (SatHelper::CostasLoop *) 0 ;
  float arg2 ;
  
  arg1 = *(SatHelper::CostasLoop **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  SatHelper::ControlLoop *swig_b0 = (SatHelper::ControlLoop *)arg1;
  (swig_b0)->SetRelativeMinFrequency(arg2);
  
}


float _wrap_CostasLoop_GetLoopBandwidth_SatHelper_9d76377ed7889403(SatHelper::CostasLoop *_swig_go_0) {
  SatHelper::CostasLoop *arg1 = (SatHelper::CostasLoop *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(SatHelper::CostasLoop **)&_swig_go_0; 
  
  SatHelper::ControlLoop *swig_b0 = (SatHelper::ControlLoop *)arg1;
  result = (float)((SatHelper::ControlLoop const *)swig_b0)->GetLoopBandwidth();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_CostasLoop_GetDampingFactor_SatHelper_9d76377ed7889403(SatHelper::CostasLoop *_swig_go_0) {
  SatHelper::CostasLoop *arg1 = (SatHelper::CostasLoop *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(SatHelper::CostasLoop **)&_swig_go_0; 
  
  SatHelper::ControlLoop *swig_b0 = (SatHelper::ControlLoop *)arg1;
  result = (float)((SatHelper::ControlLoop const *)swig_b0)->GetDampingFactor();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_CostasLoop_GetAlpha_SatHelper_9d76377ed7889403(SatHelper::CostasLoop *_swig_go_0) {
  SatHelper::CostasLoop *arg1 = (SatHelper::CostasLoop *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(SatHelper::CostasLoop **)&_swig_go_0; 
  
  SatHelper::ControlLoop *swig_b0 = (SatHelper::ControlLoop *)arg1;
  result = (float)((SatHelper::ControlLoop const *)swig_b0)->GetAlpha();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_CostasLoop_GetBeta_SatHelper_9d76377ed7889403(SatHelper::CostasLoop *_swig_go_0) {
  SatHelper::CostasLoop *arg1 = (SatHelper::CostasLoop *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(SatHelper::CostasLoop **)&_swig_go_0; 
  
  SatHelper::ControlLoop *swig_b0 = (SatHelper::ControlLoop *)arg1;
  result = (float)((SatHelper::ControlLoop const *)swig_b0)->GetBeta();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_CostasLoop_GetRelativeFrequency_SatHelper_9d76377ed7889403(SatHelper::CostasLoop *_swig_go_0) {
  SatHelper::CostasLoop *arg1 = (SatHelper::CostasLoop *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(SatHelper::CostasLoop **)&_swig_go_0; 
  
  SatHelper::ControlLoop *swig_b0 = (SatHelper::ControlLoop *)arg1;
  result = (float)((SatHelper::ControlLoop const *)swig_b0)->GetRelativeFrequency();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_CostasLoop_GetPhase_SatHelper_9d76377ed7889403(SatHelper::CostasLoop *_swig_go_0) {
  SatHelper::CostasLoop *arg1 = (SatHelper::CostasLoop *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(SatHelper::CostasLoop **)&_swig_go_0; 
  
  SatHelper::ControlLoop *swig_b0 = (SatHelper::ControlLoop *)arg1;
  result = (float)((SatHelper::ControlLoop const *)swig_b0)->GetPhase();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_CostasLoop_GetMaxRelativeFrequency_SatHelper_9d76377ed7889403(SatHelper::CostasLoop *_swig_go_0) {
  SatHelper::CostasLoop *arg1 = (SatHelper::CostasLoop *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(SatHelper::CostasLoop **)&_swig_go_0; 
  
  SatHelper::ControlLoop *swig_b0 = (SatHelper::ControlLoop *)arg1;
  result = (float)((SatHelper::ControlLoop const *)swig_b0)->GetMaxRelativeFrequency();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_CostasLoop_GetMinRelativeFrequency_SatHelper_9d76377ed7889403(SatHelper::CostasLoop *_swig_go_0) {
  SatHelper::CostasLoop *arg1 = (SatHelper::CostasLoop *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(SatHelper::CostasLoop **)&_swig_go_0; 
  
  SatHelper::ControlLoop *swig_b0 = (SatHelper::ControlLoop *)arg1;
  result = (float)((SatHelper::ControlLoop const *)swig_b0)->GetMinRelativeFrequency();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CostasLoop_FrequencyLimit_SatHelper_9d76377ed7889403(SatHelper::CostasLoop *_swig_go_0) {
  SatHelper::CostasLoop *arg1 = (SatHelper::CostasLoop *) 0 ;
  
  arg1 = *(SatHelper::CostasLoop **)&_swig_go_0; 
  
  SatHelper::ControlLoop *swig_b0 = (SatHelper::ControlLoop *)arg1;
  (swig_b0)->FrequencyLimit();
  
}


void _wrap_CostasLoop_PhaseWrap_SatHelper_9d76377ed7889403(SatHelper::CostasLoop *_swig_go_0) {
  SatHelper::CostasLoop *arg1 = (SatHelper::CostasLoop *) 0 ;
  
  arg1 = *(SatHelper::CostasLoop **)&_swig_go_0; 
  
  SatHelper::ControlLoop *swig_b0 = (SatHelper::ControlLoop *)arg1;
  (swig_b0)->PhaseWrap();
  
}


intgo _wrap_HAMMING_FFTWindows_SatHelper_9d76377ed7889403() {
  SatHelper::FFTWindows::WindowType result;
  intgo _swig_go_result;
  
  
  result = SatHelper::FFTWindows::HAMMING;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_HANN_FFTWindows_SatHelper_9d76377ed7889403() {
  SatHelper::FFTWindows::WindowType result;
  intgo _swig_go_result;
  
  
  result = SatHelper::FFTWindows::HANN;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_BLACKMAN_FFTWindows_SatHelper_9d76377ed7889403() {
  SatHelper::FFTWindows::WindowType result;
  intgo _swig_go_result;
  
  
  result = SatHelper::FFTWindows::BLACKMAN;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_RECTANGULAR_FFTWindows_SatHelper_9d76377ed7889403() {
  SatHelper::FFTWindows::WindowType result;
  intgo _swig_go_result;
  
  
  result = SatHelper::FFTWindows::RECTANGULAR;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_KAISER_FFTWindows_SatHelper_9d76377ed7889403() {
  SatHelper::FFTWindows::WindowType result;
  intgo _swig_go_result;
  
  
  result = SatHelper::FFTWindows::KAISER;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_BLACKMAN_HARRIS_FFTWindows_SatHelper_9d76377ed7889403() {
  SatHelper::FFTWindows::WindowType result;
  intgo _swig_go_result;
  
  
  result = SatHelper::FFTWindows::BLACKMAN_HARRIS;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_BARTLETT_FFTWindows_SatHelper_9d76377ed7889403() {
  SatHelper::FFTWindows::WindowType result;
  intgo _swig_go_result;
  
  
  result = SatHelper::FFTWindows::BARTLETT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_FLATTOP_FFTWindows_SatHelper_9d76377ed7889403() {
  SatHelper::FFTWindows::WindowType result;
  intgo _swig_go_result;
  
  
  result = SatHelper::FFTWindows::FLATTOP;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


std::vector< float > *_wrap_FFTWindows_Rectangular_SatHelper_9d76377ed7889403(intgo _swig_go_0) {
  int arg1 ;
  std::vector< float > result;
  std::vector< float > *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  result = SatHelper::FFTWindows::Rectangular(arg1);
  *(std::vector< float > **)&_swig_go_result = new std::vector< float >(result); 
  return _swig_go_result;
}


std::vector< float > *_wrap_FFTWindows_Hamming_SatHelper_9d76377ed7889403(intgo _swig_go_0) {
  int arg1 ;
  std::vector< float > result;
  std::vector< float > *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  result = SatHelper::FFTWindows::Hamming(arg1);
  *(std::vector< float > **)&_swig_go_result = new std::vector< float >(result); 
  return _swig_go_result;
}


std::vector< float > *_wrap_FFTWindows_Hanning_SatHelper_9d76377ed7889403(intgo _swig_go_0) {
  int arg1 ;
  std::vector< float > result;
  std::vector< float > *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  result = SatHelper::FFTWindows::Hanning(arg1);
  *(std::vector< float > **)&_swig_go_result = new std::vector< float >(result); 
  return _swig_go_result;
}


std::vector< float > *_wrap_FFTWindows_Blackman_SatHelper_9d76377ed7889403(intgo _swig_go_0) {
  int arg1 ;
  std::vector< float > result;
  std::vector< float > *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  result = SatHelper::FFTWindows::Blackman(arg1);
  *(std::vector< float > **)&_swig_go_result = new std::vector< float >(result); 
  return _swig_go_result;
}


std::vector< float > *_wrap_FFTWindows_BlackmanHarris__SWIG_0_SatHelper_9d76377ed7889403(intgo _swig_go_0, intgo _swig_go_1) {
  int arg1 ;
  int arg2 ;
  std::vector< float > result;
  std::vector< float > *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = SatHelper::FFTWindows::BlackmanHarris(arg1,arg2);
  *(std::vector< float > **)&_swig_go_result = new std::vector< float >(result); 
  return _swig_go_result;
}


std::vector< float > *_wrap_FFTWindows_BlackmanHarris__SWIG_1_SatHelper_9d76377ed7889403(intgo _swig_go_0) {
  int arg1 ;
  std::vector< float > result;
  std::vector< float > *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  result = SatHelper::FFTWindows::BlackmanHarris(arg1);
  *(std::vector< float > **)&_swig_go_result = new std::vector< float >(result); 
  return _swig_go_result;
}


std::vector< float > *_wrap_FFTWindows_FlatTop_SatHelper_9d76377ed7889403(intgo _swig_go_0) {
  int arg1 ;
  std::vector< float > result;
  std::vector< float > *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  result = SatHelper::FFTWindows::FlatTop(arg1);
  *(std::vector< float > **)&_swig_go_result = new std::vector< float >(result); 
  return _swig_go_result;
}


std::vector< float > *_wrap_FFTWindows_Kaiser_SatHelper_9d76377ed7889403(intgo _swig_go_0, double _swig_go_1) {
  int arg1 ;
  double arg2 ;
  std::vector< float > result;
  std::vector< float > *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  result = SatHelper::FFTWindows::Kaiser(arg1,arg2);
  *(std::vector< float > **)&_swig_go_result = new std::vector< float >(result); 
  return _swig_go_result;
}


std::vector< float > *_wrap_FFTWindows_Bartlett_SatHelper_9d76377ed7889403(intgo _swig_go_0) {
  int arg1 ;
  std::vector< float > result;
  std::vector< float > *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  result = SatHelper::FFTWindows::Bartlett(arg1);
  *(std::vector< float > **)&_swig_go_result = new std::vector< float >(result); 
  return _swig_go_result;
}


std::vector< float > *_wrap_FFTWindows_MakeWindow_SatHelper_9d76377ed7889403(intgo _swig_go_0, intgo _swig_go_1, float _swig_go_2) {
  SatHelper::FFTWindows::WindowType arg1 ;
  int arg2 ;
  float arg3 ;
  std::vector< float > result;
  std::vector< float > *_swig_go_result;
  
  arg1 = (SatHelper::FFTWindows::WindowType)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  
  result = SatHelper::FFTWindows::MakeWindow(arg1,arg2,arg3);
  *(std::vector< float > **)&_swig_go_result = new std::vector< float >(result); 
  return _swig_go_result;
}


SatHelper::FFTWindows *_wrap_new_FFTWindows_SatHelper_9d76377ed7889403() {
  SatHelper::FFTWindows *result = 0 ;
  SatHelper::FFTWindows *_swig_go_result;
  
  
  result = (SatHelper::FFTWindows *)new SatHelper::FFTWindows();
  *(SatHelper::FFTWindows **)&_swig_go_result = (SatHelper::FFTWindows *)result; 
  return _swig_go_result;
}


void _wrap_delete_FFTWindows_SatHelper_9d76377ed7889403(SatHelper::FFTWindows *_swig_go_0) {
  SatHelper::FFTWindows *arg1 = (SatHelper::FFTWindows *) 0 ;
  
  arg1 = *(SatHelper::FFTWindows **)&_swig_go_0; 
  
  delete arg1;
  
}


std::vector< float > *_wrap_Filters_RRC_SatHelper_9d76377ed7889403(double _swig_go_0, double _swig_go_1, double _swig_go_2, double _swig_go_3, intgo _swig_go_4) {
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  int arg5 ;
  std::vector< float > result;
  std::vector< float > *_swig_go_result;
  
  arg1 = (double)_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  result = SatHelper::Filters::RRC(arg1,arg2,arg3,arg4,arg5);
  *(std::vector< float > **)&_swig_go_result = new std::vector< float >(result); 
  return _swig_go_result;
}


std::vector< float > *_wrap_Filters_lowPass_SatHelper_9d76377ed7889403(double _swig_go_0, double _swig_go_1, double _swig_go_2, double _swig_go_3, intgo _swig_go_4, double _swig_go_5) {
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  SatHelper::FFTWindows::WindowType arg5 ;
  double arg6 ;
  std::vector< float > result;
  std::vector< float > *_swig_go_result;
  
  arg1 = (double)_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (SatHelper::FFTWindows::WindowType)_swig_go_4; 
  arg6 = (double)_swig_go_5; 
  
  result = SatHelper::Filters::lowPass(arg1,arg2,arg3,arg4,arg5,arg6);
  *(std::vector< float > **)&_swig_go_result = new std::vector< float >(result); 
  return _swig_go_result;
}


SatHelper::Filters *_wrap_new_Filters_SatHelper_9d76377ed7889403() {
  SatHelper::Filters *result = 0 ;
  SatHelper::Filters *_swig_go_result;
  
  
  result = (SatHelper::Filters *)new SatHelper::Filters();
  *(SatHelper::Filters **)&_swig_go_result = (SatHelper::Filters *)result; 
  return _swig_go_result;
}


void _wrap_delete_Filters_SatHelper_9d76377ed7889403(SatHelper::Filters *_swig_go_0) {
  SatHelper::Filters *arg1 = (SatHelper::Filters *) 0 ;
  
  arg1 = *(SatHelper::Filters **)&_swig_go_0; 
  
  delete arg1;
  
}


SatHelper::FirFilter *_wrap_new_FirFilter_SatHelper_9d76377ed7889403(intgo _swig_go_0, std::vector< float > *_swig_go_1) {
  unsigned int arg1 ;
  std::vector< float > *arg2 = 0 ;
  SatHelper::FirFilter *result = 0 ;
  SatHelper::FirFilter *_swig_go_result;
  
  arg1 = (unsigned int)_swig_go_0; 
  arg2 = *(std::vector< float > **)&_swig_go_1; 
  
  result = (SatHelper::FirFilter *)new SatHelper::FirFilter(arg1,(std::vector< float > const &)*arg2);
  *(SatHelper::FirFilter **)&_swig_go_result = (SatHelper::FirFilter *)result; 
  return _swig_go_result;
}


void _wrap_delete_FirFilter_SatHelper_9d76377ed7889403(SatHelper::FirFilter *_swig_go_0) {
  SatHelper::FirFilter *arg1 = (SatHelper::FirFilter *) 0 ;
  
  arg1 = *(SatHelper::FirFilter **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_FirFilter_Work_SatHelper_9d76377ed7889403(SatHelper::FirFilter *_swig_go_0, _Complex float *_swig_go_1, _Complex float *_swig_go_2, intgo _swig_go_3) {
  SatHelper::FirFilter *arg1 = (SatHelper::FirFilter *) 0 ;
  std::complex< float > *arg2 = (std::complex< float > *) 0 ;
  std::complex< float > *arg3 = (std::complex< float > *) 0 ;
  int arg4 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(SatHelper::FirFilter **)&_swig_go_0; 
  arg2 = *(std::complex< float > **)&_swig_go_1; 
  arg3 = *(std::complex< float > **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  result = (int)(arg1)->Work(arg2,arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


SatHelper::MMSEFirInterpolator *_wrap_new_MMSEFirInterpolator_SatHelper_9d76377ed7889403() {
  SatHelper::MMSEFirInterpolator *result = 0 ;
  SatHelper::MMSEFirInterpolator *_swig_go_result;
  
  
  result = (SatHelper::MMSEFirInterpolator *)new SatHelper::MMSEFirInterpolator();
  *(SatHelper::MMSEFirInterpolator **)&_swig_go_result = (SatHelper::MMSEFirInterpolator *)result; 
  return _swig_go_result;
}


void _wrap_delete_MMSEFirInterpolator_SatHelper_9d76377ed7889403(SatHelper::MMSEFirInterpolator *_swig_go_0) {
  SatHelper::MMSEFirInterpolator *arg1 = (SatHelper::MMSEFirInterpolator *) 0 ;
  
  arg1 = *(SatHelper::MMSEFirInterpolator **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_MMSEFirInterpolator_GetNTaps_SatHelper_9d76377ed7889403(SatHelper::MMSEFirInterpolator *_swig_go_0) {
  SatHelper::MMSEFirInterpolator *arg1 = (SatHelper::MMSEFirInterpolator *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(SatHelper::MMSEFirInterpolator **)&_swig_go_0; 
  
  result = (unsigned int)((SatHelper::MMSEFirInterpolator const *)arg1)->GetNTaps();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_MMSEFirInterpolator_GetNSteps_SatHelper_9d76377ed7889403(SatHelper::MMSEFirInterpolator *_swig_go_0) {
  SatHelper::MMSEFirInterpolator *arg1 = (SatHelper::MMSEFirInterpolator *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(SatHelper::MMSEFirInterpolator **)&_swig_go_0; 
  
  result = (unsigned int)((SatHelper::MMSEFirInterpolator const *)arg1)->GetNSteps();
  _swig_go_result = result; 
  return _swig_go_result;
}


_Complex float _wrap_MMSEFirInterpolator_interpolate_SatHelper_9d76377ed7889403(SatHelper::MMSEFirInterpolator *_swig_go_0, _Complex float *_swig_go_1, float _swig_go_2) {
  SatHelper::MMSEFirInterpolator *arg1 = (SatHelper::MMSEFirInterpolator *) 0 ;
  std::complex< float > *arg2 ;
  float arg3 ;
  std::complex< float > result;
  _Complex float _swig_go_result;
  
  arg1 = *(SatHelper::MMSEFirInterpolator **)&_swig_go_0; 
  arg2 = *(std::complex< float > **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  
  result = ((SatHelper::MMSEFirInterpolator const *)arg1)->interpolate((std::complex< float > const (*))arg2,arg3);
  *(std::complex< float > **)&_swig_go_result = new std::complex< float >(result); 
  return _swig_go_result;
}


SatHelper::FirKernel *_wrap_new_FirKernel_SatHelper_9d76377ed7889403(std::vector< float > *_swig_go_0) {
  std::vector< float > *arg1 = 0 ;
  SatHelper::FirKernel *result = 0 ;
  SatHelper::FirKernel *_swig_go_result;
  
  arg1 = *(std::vector< float > **)&_swig_go_0; 
  
  result = (SatHelper::FirKernel *)new SatHelper::FirKernel((std::vector< float > const &)*arg1);
  *(SatHelper::FirKernel **)&_swig_go_result = (SatHelper::FirKernel *)result; 
  return _swig_go_result;
}


void _wrap_delete_FirKernel_SatHelper_9d76377ed7889403(SatHelper::FirKernel *_swig_go_0) {
  SatHelper::FirKernel *arg1 = (SatHelper::FirKernel *) 0 ;
  
  arg1 = *(SatHelper::FirKernel **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_FirKernel_SetTaps_SatHelper_9d76377ed7889403(SatHelper::FirKernel *_swig_go_0, std::vector< float > *_swig_go_1) {
  SatHelper::FirKernel *arg1 = (SatHelper::FirKernel *) 0 ;
  std::vector< float > *arg2 = 0 ;
  
  arg1 = *(SatHelper::FirKernel **)&_swig_go_0; 
  arg2 = *(std::vector< float > **)&_swig_go_1; 
  
  (arg1)->SetTaps((std::vector< float > const &)*arg2);
  
}


_Complex float _wrap_FirKernel_filter_SatHelper_9d76377ed7889403(SatHelper::FirKernel *_swig_go_0, _Complex float *_swig_go_1) {
  SatHelper::FirKernel *arg1 = (SatHelper::FirKernel *) 0 ;
  std::complex< float > *arg2 = (std::complex< float > *) 0 ;
  std::complex< float > result;
  _Complex float _swig_go_result;
  
  arg1 = *(SatHelper::FirKernel **)&_swig_go_0; 
  arg2 = *(std::complex< float > **)&_swig_go_1; 
  
  result = (arg1)->filter((std::complex< float > const *)arg2);
  *(std::complex< float > **)&_swig_go_result = new std::complex< float >(result); 
  return _swig_go_result;
}


void _wrap_FirKernel_filterData_SatHelper_9d76377ed7889403(SatHelper::FirKernel *_swig_go_0, _Complex float *_swig_go_1, _Complex float *_swig_go_2, long long _swig_go_3) {
  SatHelper::FirKernel *arg1 = (SatHelper::FirKernel *) 0 ;
  std::complex< float > *arg2 = (std::complex< float > *) 0 ;
  std::complex< float > *arg3 = (std::complex< float > *) 0 ;
  unsigned long arg4 ;
  
  arg1 = *(SatHelper::FirKernel **)&_swig_go_0; 
  arg2 = *(std::complex< float > **)&_swig_go_1; 
  arg3 = *(std::complex< float > **)&_swig_go_2; 
  arg4 = (unsigned long)_swig_go_3; 
  
  (arg1)->Filter((std::complex< float > const *)arg2,arg3,arg4);
  
}


void _wrap_FirKernel_FilterDecimating_SatHelper_9d76377ed7889403(SatHelper::FirKernel *_swig_go_0, _Complex float *_swig_go_1, _Complex float *_swig_go_2, long long _swig_go_3, intgo _swig_go_4) {
  SatHelper::FirKernel *arg1 = (SatHelper::FirKernel *) 0 ;
  std::complex< float > *arg2 = (std::complex< float > *) 0 ;
  std::complex< float > *arg3 = (std::complex< float > *) 0 ;
  unsigned long arg4 ;
  unsigned int arg5 ;
  
  arg1 = *(SatHelper::FirKernel **)&_swig_go_0; 
  arg2 = *(std::complex< float > **)&_swig_go_1; 
  arg3 = *(std::complex< float > **)&_swig_go_2; 
  arg4 = (unsigned long)_swig_go_3; 
  arg5 = (unsigned int)_swig_go_4; 
  
  (arg1)->FilterDecimating((std::complex< float > const *)arg2,arg3,arg4,arg5);
  
}


void _wrap_FirKernel_UpdateTap_SatHelper_9d76377ed7889403(SatHelper::FirKernel *_swig_go_0, float _swig_go_1, intgo _swig_go_2) {
  SatHelper::FirKernel *arg1 = (SatHelper::FirKernel *) 0 ;
  float arg2 ;
  unsigned int arg3 ;
  
  arg1 = *(SatHelper::FirKernel **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  arg3 = (unsigned int)_swig_go_2; 
  
  (arg1)->UpdateTap(arg2,arg3);
  
}


std::vector< float > *_wrap_FirKernel_GetTaps_SatHelper_9d76377ed7889403(SatHelper::FirKernel *_swig_go_0) {
  SatHelper::FirKernel *arg1 = (SatHelper::FirKernel *) 0 ;
  std::vector< float > result;
  std::vector< float > *_swig_go_result;
  
  arg1 = *(SatHelper::FirKernel **)&_swig_go_0; 
  
  result = ((SatHelper::FirKernel const *)arg1)->GetTaps();
  *(std::vector< float > **)&_swig_go_result = new std::vector< float >(result); 
  return _swig_go_result;
}


intgo _wrap_FirKernel_GetNTaps_SatHelper_9d76377ed7889403(SatHelper::FirKernel *_swig_go_0) {
  SatHelper::FirKernel *arg1 = (SatHelper::FirKernel *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(SatHelper::FirKernel **)&_swig_go_0; 
  
  result = (unsigned int)((SatHelper::FirKernel const *)arg1)->GetNTaps();
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_Info_GetVersion_SatHelper_9d76377ed7889403() {
  std::string *result = 0 ;
  _gostring_ _swig_go_result;
  
  
  result = (std::string *) &SatHelper::Info::GetVersion();
  _swig_go_result = Swig_AllocateString((*result).data(), (*result).length()); 
  return _swig_go_result;
}


_gostring_ _wrap_Info_GetCompilationDate_SatHelper_9d76377ed7889403() {
  std::string *result = 0 ;
  _gostring_ _swig_go_result;
  
  
  result = (std::string *) &SatHelper::Info::GetCompilationDate();
  _swig_go_result = Swig_AllocateString((*result).data(), (*result).length()); 
  return _swig_go_result;
}


_gostring_ _wrap_Info_GetCompilationTime_SatHelper_9d76377ed7889403() {
  std::string *result = 0 ;
  _gostring_ _swig_go_result;
  
  
  result = (std::string *) &SatHelper::Info::GetCompilationTime();
  _swig_go_result = Swig_AllocateString((*result).data(), (*result).length()); 
  return _swig_go_result;
}


_gostring_ _wrap_Info_GetGitSHA1_SatHelper_9d76377ed7889403() {
  std::string *result = 0 ;
  _gostring_ _swig_go_result;
  
  
  result = (std::string *) &SatHelper::Info::GetGitSHA1();
  _swig_go_result = Swig_AllocateString((*result).data(), (*result).length()); 
  return _swig_go_result;
}


SatHelper::Info *_wrap_new_Info_SatHelper_9d76377ed7889403() {
  SatHelper::Info *result = 0 ;
  SatHelper::Info *_swig_go_result;
  
  
  result = (SatHelper::Info *)new SatHelper::Info();
  *(SatHelper::Info **)&_swig_go_result = (SatHelper::Info *)result; 
  return _swig_go_result;
}


void _wrap_delete_Info_SatHelper_9d76377ed7889403(SatHelper::Info *_swig_go_0) {
  SatHelper::Info *arg1 = (SatHelper::Info *) 0 ;
  
  arg1 = *(SatHelper::Info **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_Extensions_hasFMA_set_SatHelper_9d76377ed7889403(bool _swig_go_0) {
  bool arg1 ;
  
  arg1 = (bool)_swig_go_0; 
  
  SatHelper::Extensions::hasFMA = arg1;
  
}


bool _wrap_Extensions_hasFMA_get_SatHelper_9d76377ed7889403() {
  bool result;
  bool _swig_go_result;
  
  
  result = (bool)SatHelper::Extensions::hasFMA;
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_Extensions_hasSSE_set_SatHelper_9d76377ed7889403(bool _swig_go_0) {
  bool arg1 ;
  
  arg1 = (bool)_swig_go_0; 
  
  SatHelper::Extensions::hasSSE = arg1;
  
}


bool _wrap_Extensions_hasSSE_get_SatHelper_9d76377ed7889403() {
  bool result;
  bool _swig_go_result;
  
  
  result = (bool)SatHelper::Extensions::hasSSE;
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_Extensions_hasSSE4_set_SatHelper_9d76377ed7889403(bool _swig_go_0) {
  bool arg1 ;
  
  arg1 = (bool)_swig_go_0; 
  
  SatHelper::Extensions::hasSSE4 = arg1;
  
}


bool _wrap_Extensions_hasSSE4_get_SatHelper_9d76377ed7889403() {
  bool result;
  bool _swig_go_result;
  
  
  result = (bool)SatHelper::Extensions::hasSSE4;
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_Extensions_hasAVX_set_SatHelper_9d76377ed7889403(bool _swig_go_0) {
  bool arg1 ;
  
  arg1 = (bool)_swig_go_0; 
  
  SatHelper::Extensions::hasAVX = arg1;
  
}


bool _wrap_Extensions_hasAVX_get_SatHelper_9d76377ed7889403() {
  bool result;
  bool _swig_go_result;
  
  
  result = (bool)SatHelper::Extensions::hasAVX;
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_Extensions_initialized_set_SatHelper_9d76377ed7889403(bool _swig_go_0) {
  bool arg1 ;
  
  arg1 = (bool)_swig_go_0; 
  
  SatHelper::Extensions::initialized = arg1;
  
}


bool _wrap_Extensions_initialized_get_SatHelper_9d76377ed7889403() {
  bool result;
  bool _swig_go_result;
  
  
  result = (bool)SatHelper::Extensions::initialized;
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_Extensions_FMA_SatHelper_9d76377ed7889403(float _swig_go_0, float _swig_go_1, float _swig_go_2) {
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float result;
  float _swig_go_result;
  
  arg1 = (float)_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  
  result = (float)SatHelper::Extensions::FMA(arg1,arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


SatHelper::Extensions *_wrap_new_Extensions_SatHelper_9d76377ed7889403() {
  SatHelper::Extensions *result = 0 ;
  SatHelper::Extensions *_swig_go_result;
  
  
  result = (SatHelper::Extensions *)new SatHelper::Extensions();
  *(SatHelper::Extensions **)&_swig_go_result = (SatHelper::Extensions *)result; 
  return _swig_go_result;
}


void _wrap_delete_Extensions_SatHelper_9d76377ed7889403(SatHelper::Extensions *_swig_go_0) {
  SatHelper::Extensions *arg1 = (SatHelper::Extensions *) 0 ;
  
  arg1 = *(SatHelper::Extensions **)&_swig_go_0; 
  
  delete arg1;
  
}


#ifdef __cplusplus
}
#endif

